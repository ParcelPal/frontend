{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  ExpoKeepAwakeTag: true,\n  isAvailableAsync: true,\n  useKeepAwake: true,\n  activateKeepAwake: true,\n  activateKeepAwakeAsync: true,\n  deactivateKeepAwake: true,\n  addListener: true\n};\nexports.ExpoKeepAwakeTag = void 0;\nexports.activateKeepAwake = activateKeepAwake;\nexports.activateKeepAwakeAsync = activateKeepAwakeAsync;\nexports.addListener = addListener;\nexports.deactivateKeepAwake = deactivateKeepAwake;\nexports.isAvailableAsync = isAvailableAsync;\nexports.useKeepAwake = useKeepAwake;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _react = require(\"react\");\nvar _ExpoKeepAwake = _interopRequireDefault(require(\"./ExpoKeepAwake\"));\nvar _KeepAwake = require(\"./KeepAwake.types\");\nObject.keys(_KeepAwake).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _KeepAwake[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _KeepAwake[key];\n    }\n  });\n});\nvar ExpoKeepAwakeTag = 'ExpoKeepAwakeDefaultTag';\nexports.ExpoKeepAwakeTag = ExpoKeepAwakeTag;\nfunction isAvailableAsync() {\n  return _isAvailableAsync.apply(this, arguments);\n}\nfunction _isAvailableAsync() {\n  _isAvailableAsync = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee() {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!_ExpoKeepAwake[\"default\"].isAvailableAsync) {\n            _context.next = 4;\n            break;\n          }\n          _context.next = 3;\n          return _ExpoKeepAwake[\"default\"].isAvailableAsync();\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n        case 4:\n          return _context.abrupt(\"return\", true);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _isAvailableAsync.apply(this, arguments);\n}\nfunction useKeepAwake() {\n  var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ExpoKeepAwakeTag;\n  var options = arguments.length > 1 ? arguments[1] : undefined;\n  (0, _react.useEffect)(function () {\n    var isMounted = true;\n    activateKeepAwakeAsync(tag).then(function () {\n      if (isMounted && _ExpoKeepAwake[\"default\"].addListenerForTag && options !== null && options !== void 0 && options.listener) {\n        addListener(tag, options.listener);\n      }\n    });\n    return function () {\n      isMounted = false;\n      if (options !== null && options !== void 0 && options.suppressDeactivateWarnings) {\n        deactivateKeepAwake(tag)[\"catch\"](function () {});\n      } else {\n        deactivateKeepAwake(tag);\n      }\n    };\n  }, [tag]);\n}\nfunction activateKeepAwake() {\n  var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ExpoKeepAwakeTag;\n  console.warn('`activateKeepAwake` is deprecated. Use `activateKeepAwakeAsync` instead.');\n  return activateKeepAwakeAsync(tag);\n}\nfunction activateKeepAwakeAsync() {\n  return _activateKeepAwakeAsync.apply(this, arguments);\n}\nfunction _activateKeepAwakeAsync() {\n  _activateKeepAwakeAsync = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2() {\n    var _ExpoKeepAwake$activa;\n    var tag,\n      _args2 = arguments;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          tag = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : ExpoKeepAwakeTag;\n          _context2.next = 3;\n          return (_ExpoKeepAwake$activa = _ExpoKeepAwake[\"default\"].activate) === null || _ExpoKeepAwake$activa === void 0 ? void 0 : _ExpoKeepAwake$activa.call(_ExpoKeepAwake[\"default\"], tag);\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _activateKeepAwakeAsync.apply(this, arguments);\n}\nfunction deactivateKeepAwake() {\n  return _deactivateKeepAwake.apply(this, arguments);\n}\nfunction _deactivateKeepAwake() {\n  _deactivateKeepAwake = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee3() {\n    var _ExpoKeepAwake$deacti;\n    var tag,\n      _args3 = arguments;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          tag = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : ExpoKeepAwakeTag;\n          _context3.next = 3;\n          return (_ExpoKeepAwake$deacti = _ExpoKeepAwake[\"default\"].deactivate) === null || _ExpoKeepAwake$deacti === void 0 ? void 0 : _ExpoKeepAwake$deacti.call(_ExpoKeepAwake[\"default\"], tag);\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _deactivateKeepAwake.apply(this, arguments);\n}\nfunction addListener(tagOrListener, listener) {\n  if (!_ExpoKeepAwake[\"default\"].addListenerForTag) {\n    throw new _expoModulesCore.UnavailabilityError('ExpoKeepAwake', 'addListenerForTag');\n  }\n  var tag = typeof tagOrListener === 'string' ? tagOrListener : ExpoKeepAwakeTag;\n  var _listener = typeof tagOrListener === 'function' ? tagOrListener : listener;\n  return _ExpoKeepAwake[\"default\"].addListenerForTag(tag, _listener);\n}","map":{"version":3,"names":["_expoModulesCore","require","_react","_ExpoKeepAwake","_interopRequireDefault","_KeepAwake","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","ExpoKeepAwakeTag","isAvailableAsync","_isAvailableAsync","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","sent","stop","useKeepAwake","tag","length","undefined","options","useEffect","isMounted","activateKeepAwakeAsync","then","addListenerForTag","listener","addListener","suppressDeactivateWarnings","deactivateKeepAwake","activateKeepAwake","console","warn","_activateKeepAwakeAsync","_callee2","_ExpoKeepAwake$activa","_args2","_callee2$","_context2","activate","_deactivateKeepAwake","_callee3","_ExpoKeepAwake$deacti","_args3","_callee3$","_context3","deactivate","tagOrListener","UnavailabilityError","_listener"],"sources":["C:\\Users\\Anirudh\\New folder\\amplify\\frontend\\node_modules\\expo-keep-awake\\src\\index.ts"],"sourcesContent":["import { Subscription, UnavailabilityError } from 'expo-modules-core';\nimport { useEffect } from 'react';\n\nimport ExpoKeepAwake from './ExpoKeepAwake';\nimport { KeepAwakeListener, KeepAwakeOptions } from './KeepAwake.types';\n\n/** Default tag, used when no tag has been specified in keep awake method calls. */\nexport const ExpoKeepAwakeTag = 'ExpoKeepAwakeDefaultTag';\n\n/** @returns `true` on all platforms except [unsupported web browsers](https://caniuse.com/wake-lock). */\nexport async function isAvailableAsync(): Promise<boolean> {\n  if (ExpoKeepAwake.isAvailableAsync) {\n    return await ExpoKeepAwake.isAvailableAsync();\n  }\n  return true;\n}\n\n/**\n * A React hook to keep the screen awake for as long as the owner component is mounted.\n * The optionally provided `tag` argument is used when activating and deactivating the keep-awake\n * feature. If unspecified, the default `tag` is used. See the documentation for `activateKeepAwakeAsync`\n * below to learn more about the `tag` argument.\n *\n * @param tag Tag to lock screen sleep prevention. If not provided, the default tag is used.\n * @param options Additional options for the keep awake hook.\n */\nexport function useKeepAwake(tag: string = ExpoKeepAwakeTag, options?: KeepAwakeOptions): void {\n  useEffect(() => {\n    let isMounted = true;\n    activateKeepAwakeAsync(tag).then(() => {\n      if (isMounted && ExpoKeepAwake.addListenerForTag && options?.listener) {\n        addListener(tag, options.listener);\n      }\n    });\n    return () => {\n      isMounted = false;\n      if (options?.suppressDeactivateWarnings) {\n        deactivateKeepAwake(tag).catch(() => {});\n      } else {\n        deactivateKeepAwake(tag);\n      }\n    };\n  }, [tag]);\n}\n\n// @needsAudit\n/**\n * Prevents the screen from sleeping until `deactivateKeepAwake` is called with the same `tag` value.\n *\n * If the `tag` argument is specified, the screen will not sleep until you call `deactivateKeepAwake`\n * with the same `tag` argument. When using multiple `tags` for activation you'll have to deactivate\n * each one in order to re-enable screen sleep. If tag is unspecified, the default `tag` is used.\n *\n * Web support [is limited](https://caniuse.com/wake-lock).\n *\n * @param tag Tag to lock screen sleep prevention. If not provided, the default tag is used.\n * @deprecated use `activateKeepAwakeAsync` instead.\n */\nexport function activateKeepAwake(tag: string = ExpoKeepAwakeTag): Promise<void> {\n  console.warn('`activateKeepAwake` is deprecated. Use `activateKeepAwakeAsync` instead.');\n  return activateKeepAwakeAsync(tag);\n}\n\n// @needsAudit\n/**\n * Prevents the screen from sleeping until `deactivateKeepAwake` is called with the same `tag` value.\n *\n * If the `tag` argument is specified, the screen will not sleep until you call `deactivateKeepAwake`\n * with the same `tag` argument. When using multiple `tags` for activation you'll have to deactivate\n * each one in order to re-enable screen sleep. If tag is unspecified, the default `tag` is used.\n *\n * Web support [is limited](https://caniuse.com/wake-lock).\n *\n * @param tag Tag to lock screen sleep prevention. If not provided, the default tag is used.\n */\nexport async function activateKeepAwakeAsync(tag: string = ExpoKeepAwakeTag): Promise<void> {\n  await ExpoKeepAwake.activate?.(tag);\n}\n\n// @needsAudit\n/**\n * Releases the lock on screen-sleep prevention associated with the given `tag` value. If `tag`\n * is unspecified, it defaults to the same default tag that `activateKeepAwake` uses.\n *\n * @param tag Tag to release the lock on screen sleep prevention. If not provided,\n * the default tag is used.\n */\nexport async function deactivateKeepAwake(tag: string = ExpoKeepAwakeTag): Promise<void> {\n  await ExpoKeepAwake.deactivate?.(tag);\n}\n\n/**\n * Observe changes to the keep awake timer.\n * On web, this changes when navigating away from the active window/tab. No-op on native.\n * @platform web\n *\n * @example\n * ```ts\n * KeepAwake.addListener(({ state }) => {\n *   // ...\n * });\n * ```\n */\nexport function addListener(\n  tagOrListener: string | KeepAwakeListener,\n  listener?: KeepAwakeListener\n): Subscription {\n  // Assert so the type is non-nullable.\n  if (!ExpoKeepAwake.addListenerForTag) {\n    throw new UnavailabilityError('ExpoKeepAwake', 'addListenerForTag');\n  }\n\n  const tag = typeof tagOrListener === 'string' ? tagOrListener : ExpoKeepAwakeTag;\n  const _listener = typeof tagOrListener === 'function' ? tagOrListener : listener;\n\n  return ExpoKeepAwake.addListenerForTag(tag, _listener);\n}\n\nexport * from './KeepAwake.types';\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}