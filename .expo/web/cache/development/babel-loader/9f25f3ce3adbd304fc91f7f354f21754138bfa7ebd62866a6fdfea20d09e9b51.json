{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginSignUpScreen = function LoginSignUpScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isSignUp = _useState6[0],\n    setIsSignUp = _useState6[1];\n  var handleLogin = function handleLogin() {};\n  var handleSignUp = function handleSignUp() {};\n  return _jsx(ImageBackground, {\n    source: require(\"./background-image.jpg\"),\n    style: styles.backgroundImage,\n    resizeMode: \"cover\",\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: isSignUp ? 'Create Account' : 'Log In'\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        value: email,\n        keyboardType: \"email-address\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        value: password,\n        secureTextEntry: true\n      }), isSignUp && _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Confirm Password\",\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: isSignUp ? handleSignUp : handleLogin,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: isSignUp ? 'Sign Up' : 'Login'\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setIsSignUp(!isSignUp);\n        },\n        children: _jsx(Text, {\n          style: styles.toggleText,\n          children: isSignUp ? 'Already have an account? Log In' : 'Don’t have an account? Sign Up'\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center'\n  },\n  container: {\n    position: 'nset',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 0\n  },\n  headerText: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 30\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    borderColor: 'white',\n    borderBottomWidth: 1,\n    color: 'white',\n    fontSize: 16,\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: 'transparent',\n    width: '100%',\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n    borderColor: 'white',\n    borderRadius: 25\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  toggleText: {\n    marginTop: 20,\n    color: 'white',\n    textDecorationLine: 'underline'\n  }\n});\nexport default LoginSignUpScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ImageBackground","jsx","_jsx","jsxs","_jsxs","LoginSignUpScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isSignUp","setIsSignUp","handleLogin","handleSignUp","source","require","style","styles","backgroundImage","resizeMode","children","container","headerText","input","placeholder","onChangeText","text","value","keyboardType","secureTextEntry","button","onPress","buttonText","toggleText","create","flex","justifyContent","position","alignItems","paddingHorizontal","fontSize","fontWeight","color","marginBottom","width","height","borderColor","borderBottomWidth","backgroundColor","borderWidth","borderRadius","marginTop","textDecorationLine"],"sources":["/home/ubuntu/frontend/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  ImageBackground,\n} from 'react-native';\n\nconst LoginSignUpScreen = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  const handleLogin = () => {\n    // Implement your login logic here\n  };\n\n  const handleSignUp = () => {\n    // Implement your sign-up logic here\n  };\n\n  return (\n    <ImageBackground\n      source={require('./background-image.jpg')}\n      style={styles.backgroundImage}\n      resizeMode=\"cover\" \n    >\n      <View style={styles.container}>\n        <Text style={styles.headerText}>\n          {isSignUp ? 'Create Account' : 'Log In'}\n        </Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Email\"\n          onChangeText={(text) => setEmail(text)}\n          value={email}\n          keyboardType=\"email-address\"\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Password\"\n          onChangeText={(text) => setPassword(text)}\n          value={password}\n          secureTextEntry\n        />\n        {isSignUp && (\n          <TextInput\n            style={styles.input}\n            placeholder=\"Confirm Password\"\n            secureTextEntry\n          />\n        )}\n        <TouchableOpacity\n          style={styles.button}\n          onPress={isSignUp ? handleSignUp : handleLogin}\n        >\n          <Text style={styles.buttonText}>\n            {isSignUp ? 'Sign Up' : 'Login'}\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => setIsSignUp(!isSignUp)}\n        >\n          <Text style={styles.toggleText}>\n            {isSignUp\n              ? 'Already have an account? Log In'\n              : 'Don’t have an account? Sign Up'}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center',\n  },\n  container: {\n    position: 'nset',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n  },\n  headerText: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 30,\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    borderColor: 'white',\n    borderBottomWidth: 1,\n    color: 'white',\n    fontSize: 16,\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: 'transparent',\n    width: '100%',\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n    borderColor: 'white',\n    borderRadius: 25,\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n  toggleText: {\n    marginTop: 20,\n    color: 'white',\n    textDecorationLine: 'underline',\n  },\n});\n\nexport default LoginSignUpScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}