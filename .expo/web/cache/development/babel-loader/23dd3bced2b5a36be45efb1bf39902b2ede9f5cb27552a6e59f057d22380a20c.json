{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\nvar _dismissKeyboard = _interopRequireDefault(require(\"../../modules/dismissKeyboard\"));\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar _mergeRefs = _interopRequireDefault(require(\"../../modules/mergeRefs\"));\nvar _Platform = _interopRequireDefault(require(\"../Platform\"));\nvar _ScrollViewBase = _interopRequireDefault(require(\"./ScrollViewBase\"));\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\nvar _TextInputState = _interopRequireDefault(require(\"../../modules/TextInputState\"));\nvar _UIManager = _interopRequireDefault(require(\"../UIManager\"));\nvar _View = _interopRequireDefault(require(\"../View\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _warning = _interopRequireDefault(require(\"fbjs/lib/warning\"));\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar _excluded = [\"contentContainerStyle\", \"horizontal\", \"onContentSizeChange\", \"refreshControl\", \"stickyHeaderIndices\", \"pagingEnabled\", \"forwardedRef\", \"keyboardDismissMode\", \"onScroll\", \"centerContent\"];\nvar emptyObject = {};\nvar IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;\nvar ScrollView = function (_React$Component) {\n  (0, _inherits2[\"default\"])(ScrollView, _React$Component);\n  var _super = _createSuper(ScrollView);\n  function ScrollView() {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, ScrollView);\n    _this = _super.apply(this, arguments);\n    _this._scrollNodeRef = null;\n    _this._innerViewRef = null;\n    _this.isTouching = false;\n    _this.lastMomentumScrollBeginTime = 0;\n    _this.lastMomentumScrollEndTime = 0;\n    _this.observedScrollSinceBecomingResponder = false;\n    _this.becameResponderWhileAnimating = false;\n    _this.scrollResponderHandleScrollShouldSetResponder = function () {\n      return _this.isTouching;\n    };\n    _this.scrollResponderHandleStartShouldSetResponderCapture = function (e) {\n      return _this.scrollResponderIsAnimating();\n    };\n    _this.scrollResponderHandleTerminationRequest = function () {\n      return !_this.observedScrollSinceBecomingResponder;\n    };\n    _this.scrollResponderHandleTouchEnd = function (e) {\n      var nativeEvent = e.nativeEvent;\n      _this.isTouching = nativeEvent.touches.length !== 0;\n      _this.props.onTouchEnd && _this.props.onTouchEnd(e);\n    };\n    _this.scrollResponderHandleResponderRelease = function (e) {\n      _this.props.onResponderRelease && _this.props.onResponderRelease(e);\n      var currentlyFocusedTextInput = _TextInputState[\"default\"].currentlyFocusedField();\n      if (!_this.props.keyboardShouldPersistTaps && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !_this.observedScrollSinceBecomingResponder && !_this.becameResponderWhileAnimating) {\n        _this.props.onScrollResponderKeyboardDismissed && _this.props.onScrollResponderKeyboardDismissed(e);\n        _TextInputState[\"default\"].blurTextInput(currentlyFocusedTextInput);\n      }\n    };\n    _this.scrollResponderHandleScroll = function (e) {\n      _this.observedScrollSinceBecomingResponder = true;\n      _this.props.onScroll && _this.props.onScroll(e);\n    };\n    _this.scrollResponderHandleResponderGrant = function (e) {\n      _this.observedScrollSinceBecomingResponder = false;\n      _this.props.onResponderGrant && _this.props.onResponderGrant(e);\n      _this.becameResponderWhileAnimating = _this.scrollResponderIsAnimating();\n    };\n    _this.scrollResponderHandleScrollBeginDrag = function (e) {\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n    _this.scrollResponderHandleScrollEndDrag = function (e) {\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n    _this.scrollResponderHandleMomentumScrollBegin = function (e) {\n      _this.lastMomentumScrollBeginTime = Date.now();\n      _this.props.onMomentumScrollBegin && _this.props.onMomentumScrollBegin(e);\n    };\n    _this.scrollResponderHandleMomentumScrollEnd = function (e) {\n      _this.lastMomentumScrollEndTime = Date.now();\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n    _this.scrollResponderHandleTouchStart = function (e) {\n      _this.isTouching = true;\n      _this.props.onTouchStart && _this.props.onTouchStart(e);\n    };\n    _this.scrollResponderHandleTouchMove = function (e) {\n      _this.props.onTouchMove && _this.props.onTouchMove(e);\n    };\n    _this.scrollResponderIsAnimating = function () {\n      var now = Date.now();\n      var timeSinceLastMomentumScrollEnd = now - _this.lastMomentumScrollEndTime;\n      var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || _this.lastMomentumScrollEndTime < _this.lastMomentumScrollBeginTime;\n      return isAnimating;\n    };\n    _this.scrollResponderScrollTo = function (x, y, animated) {\n      if (typeof x === 'number') {\n        console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');\n      } else {\n        var _ref = x || emptyObject;\n        x = _ref.x;\n        y = _ref.y;\n        animated = _ref.animated;\n      }\n      var node = _this.getScrollableNode();\n      var left = x || 0;\n      var top = y || 0;\n      if (node != null) {\n        if (typeof node.scroll === 'function') {\n          node.scroll({\n            top: top,\n            left: left,\n            behavior: !animated ? 'auto' : 'smooth'\n          });\n        } else {\n          node.scrollLeft = left;\n          node.scrollTop = top;\n        }\n      }\n    };\n    _this.scrollResponderZoomTo = function (rect, animated) {\n      if (_Platform[\"default\"].OS !== 'ios') {\n        (0, _invariant[\"default\"])('zoomToRect is not implemented');\n      }\n    };\n    _this.scrollResponderScrollNativeHandleToKeyboard = function (nodeHandle, additionalOffset, preventNegativeScrollOffset) {\n      _this.additionalScrollOffset = additionalOffset || 0;\n      _this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;\n      _UIManager[\"default\"].measureLayout(nodeHandle, _this.getInnerViewNode(), _this.scrollResponderTextInputFocusError, _this.scrollResponderInputMeasureAndScrollToKeyboard);\n    };\n    _this.scrollResponderInputMeasureAndScrollToKeyboard = function (left, top, width, height) {\n      var keyboardScreenY = _Dimensions[\"default\"].get('window').height;\n      if (_this.keyboardWillOpenTo) {\n        keyboardScreenY = _this.keyboardWillOpenTo.endCoordinates.screenY;\n      }\n      var scrollOffsetY = top - keyboardScreenY + height + _this.additionalScrollOffset;\n      if (_this.preventNegativeScrollOffset) {\n        scrollOffsetY = Math.max(0, scrollOffsetY);\n      }\n      _this.scrollResponderScrollTo({\n        x: 0,\n        y: scrollOffsetY,\n        animated: true\n      });\n      _this.additionalOffset = 0;\n      _this.preventNegativeScrollOffset = false;\n    };\n    _this.scrollResponderKeyboardWillShow = function (e) {\n      _this.keyboardWillOpenTo = e;\n      _this.props.onKeyboardWillShow && _this.props.onKeyboardWillShow(e);\n    };\n    _this.scrollResponderKeyboardWillHide = function (e) {\n      _this.keyboardWillOpenTo = null;\n      _this.props.onKeyboardWillHide && _this.props.onKeyboardWillHide(e);\n    };\n    _this.scrollResponderKeyboardDidShow = function (e) {\n      if (e) {\n        _this.keyboardWillOpenTo = e;\n      }\n      _this.props.onKeyboardDidShow && _this.props.onKeyboardDidShow(e);\n    };\n    _this.scrollResponderKeyboardDidHide = function (e) {\n      _this.keyboardWillOpenTo = null;\n      _this.props.onKeyboardDidHide && _this.props.onKeyboardDidHide(e);\n    };\n    _this.flashScrollIndicators = function () {\n      _this.scrollResponderFlashScrollIndicators();\n    };\n    _this.getScrollResponder = function () {\n      return (0, _assertThisInitialized2[\"default\"])(_this);\n    };\n    _this.getScrollableNode = function () {\n      return _this._scrollNodeRef;\n    };\n    _this.getInnerViewRef = function () {\n      return _this._innerViewRef;\n    };\n    _this.getInnerViewNode = function () {\n      return _this._innerViewRef;\n    };\n    _this.getNativeScrollRef = function () {\n      return _this._scrollNodeRef;\n    };\n    _this.scrollTo = function (y, x, animated) {\n      if (typeof y === 'number') {\n        console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');\n      } else {\n        var _ref2 = y || emptyObject;\n        x = _ref2.x;\n        y = _ref2.y;\n        animated = _ref2.animated;\n      }\n      _this.scrollResponderScrollTo({\n        x: x || 0,\n        y: y || 0,\n        animated: animated !== false\n      });\n    };\n    _this.scrollToEnd = function (options) {\n      var animated = (options && options.animated) !== false;\n      var horizontal = _this.props.horizontal;\n      var scrollResponderNode = _this.getScrollableNode();\n      var x = horizontal ? scrollResponderNode.scrollWidth : 0;\n      var y = horizontal ? 0 : scrollResponderNode.scrollHeight;\n      _this.scrollResponderScrollTo({\n        x: x,\n        y: y,\n        animated: animated\n      });\n    };\n    _this._handleContentOnLayout = function (e) {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n        width = _e$nativeEvent$layout.width,\n        height = _e$nativeEvent$layout.height;\n      _this.props.onContentSizeChange(width, height);\n    };\n    _this._handleScroll = function (e) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (_this.props.onScroll && _this.props.scrollEventThrottle == null) {\n          console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + \"cause frame drops, use a bigger number if you don't need as \" + 'much precision.');\n        }\n      }\n      if (_this.props.keyboardDismissMode === 'on-drag') {\n        (0, _dismissKeyboard[\"default\"])();\n      }\n      _this.scrollResponderHandleScroll(e);\n    };\n    _this._setInnerViewRef = function (node) {\n      _this._innerViewRef = node;\n    };\n    _this._setScrollNodeRef = function (node) {\n      _this._scrollNodeRef = node;\n      if (node != null) {\n        node.getScrollResponder = _this.getScrollResponder;\n        node.getInnerViewNode = _this.getInnerViewNode;\n        node.getInnerViewRef = _this.getInnerViewRef;\n        node.getNativeScrollRef = _this.getNativeScrollRef;\n        node.getScrollableNode = _this.getScrollableNode;\n        node.scrollTo = _this.scrollTo;\n        node.scrollToEnd = _this.scrollToEnd;\n        node.flashScrollIndicators = _this.flashScrollIndicators;\n        node.scrollResponderZoomTo = _this.scrollResponderZoomTo;\n        node.scrollResponderScrollNativeHandleToKeyboard = _this.scrollResponderScrollNativeHandleToKeyboard;\n      }\n      var ref = (0, _mergeRefs[\"default\"])(_this.props.forwardedRef);\n      ref(node);\n    };\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(ScrollView, [{\n    key: \"scrollResponderHandleStartShouldSetResponder\",\n    value: function scrollResponderHandleStartShouldSetResponder() {\n      return false;\n    }\n  }, {\n    key: \"scrollResponderHandleResponderReject\",\n    value: function scrollResponderHandleResponderReject() {\n      (0, _warning[\"default\"])(false, \"ScrollView doesn't take rejection well - scrolls anyway\");\n    }\n  }, {\n    key: \"scrollResponderFlashScrollIndicators\",\n    value: function scrollResponderFlashScrollIndicators() {}\n  }, {\n    key: \"scrollResponderTextInputFocusError\",\n    value: function scrollResponderTextInputFocusError(e) {\n      console.error('Error measuring text field: ', e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        contentContainerStyle = _this$props.contentContainerStyle,\n        horizontal = _this$props.horizontal,\n        onContentSizeChange = _this$props.onContentSizeChange,\n        refreshControl = _this$props.refreshControl,\n        stickyHeaderIndices = _this$props.stickyHeaderIndices,\n        pagingEnabled = _this$props.pagingEnabled,\n        forwardedRef = _this$props.forwardedRef,\n        keyboardDismissMode = _this$props.keyboardDismissMode,\n        onScroll = _this$props.onScroll,\n        centerContent = _this$props.centerContent,\n        other = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props, _excluded);\n      if (process.env.NODE_ENV !== 'production' && this.props.style) {\n        var style = _StyleSheet[\"default\"].flatten(this.props.style);\n        var childLayoutProps = ['alignItems', 'justifyContent'].filter(function (prop) {\n          return style && style[prop] !== undefined;\n        });\n        (0, _invariant[\"default\"])(childLayoutProps.length === 0, \"ScrollView child layout (\" + JSON.stringify(childLayoutProps) + \") \" + 'must be applied through the contentContainerStyle prop.');\n      }\n      var contentSizeChangeProps = {};\n      if (onContentSizeChange) {\n        contentSizeChangeProps = {\n          onLayout: this._handleContentOnLayout\n        };\n      }\n      var hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\n      var children = hasStickyHeaderIndices || pagingEnabled ? _react[\"default\"].Children.map(this.props.children, function (child, i) {\n        var isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\n        if (child != null && (isSticky || pagingEnabled)) {\n          return _react[\"default\"].createElement(_View[\"default\"], {\n            style: [isSticky && styles.stickyHeader, pagingEnabled && styles.pagingEnabledChild]\n          }, child);\n        } else {\n          return child;\n        }\n      }) : this.props.children;\n      var contentContainer = _react[\"default\"].createElement(_View[\"default\"], (0, _extends2[\"default\"])({}, contentSizeChangeProps, {\n        children: children,\n        collapsable: false,\n        ref: this._setInnerViewRef,\n        style: [horizontal && styles.contentContainerHorizontal, centerContent && styles.contentContainerCenterContent, contentContainerStyle]\n      }));\n      var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n      var pagingEnabledStyle = horizontal ? styles.pagingEnabledHorizontal : styles.pagingEnabledVertical;\n      var props = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, other), {}, {\n        style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\n        onTouchStart: this.scrollResponderHandleTouchStart,\n        onTouchMove: this.scrollResponderHandleTouchMove,\n        onTouchEnd: this.scrollResponderHandleTouchEnd,\n        onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\n        onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\n        onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\n        onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\n        onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\n        onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\n        onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\n        onScroll: this._handleScroll,\n        onResponderGrant: this.scrollResponderHandleResponderGrant,\n        onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\n        onResponderTerminate: this.scrollResponderHandleTerminate,\n        onResponderRelease: this.scrollResponderHandleResponderRelease,\n        onResponderReject: this.scrollResponderHandleResponderReject\n      });\n      var ScrollViewClass = _ScrollViewBase[\"default\"];\n      (0, _invariant[\"default\"])(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');\n      var scrollView = _react[\"default\"].createElement(ScrollViewClass, (0, _extends2[\"default\"])({}, props, {\n        ref: this._setScrollNodeRef\n      }), contentContainer);\n      if (refreshControl) {\n        return _react[\"default\"].cloneElement(refreshControl, {\n          style: props.style\n        }, scrollView);\n      }\n      return scrollView;\n    }\n  }]);\n  return ScrollView;\n}(_react[\"default\"].Component);\nvar commonStyle = {\n  flexGrow: 1,\n  flexShrink: 1,\n  transform: 'translateZ(0)',\n  WebkitOverflowScrolling: 'touch'\n};\nvar styles = _StyleSheet[\"default\"].create({\n  baseVertical: (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, commonStyle), {}, {\n    flexDirection: 'column',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }),\n  baseHorizontal: (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, commonStyle), {}, {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  }),\n  contentContainerHorizontal: {\n    flexDirection: 'row'\n  },\n  contentContainerCenterContent: {\n    justifyContent: 'center',\n    flexGrow: 1\n  },\n  stickyHeader: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 10\n  },\n  pagingEnabledHorizontal: {\n    scrollSnapType: 'x mandatory'\n  },\n  pagingEnabledVertical: {\n    scrollSnapType: 'y mandatory'\n  },\n  pagingEnabledChild: {\n    scrollSnapAlign: 'start'\n  }\n});\nvar ForwardedScrollView = _react[\"default\"].forwardRef(function (props, forwardedRef) {\n  return _react[\"default\"].createElement(ScrollView, (0, _extends2[\"default\"])({}, props, {\n    forwardedRef: forwardedRef\n  }));\n});\nForwardedScrollView.displayName = 'ScrollView';\nvar _default = ForwardedScrollView;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_objectSpread2","_interopRequireDefault","require","_extends2","_objectWithoutPropertiesLoose2","_Dimensions","_dismissKeyboard","_invariant","_mergeRefs","_Platform","_ScrollViewBase","_StyleSheet","_TextInputState","_UIManager","_View","_react","_warning","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","_excluded","emptyObject","IS_ANIMATING_TOUCH_START_THRESHOLD_MS","ScrollView","_React$Component","_inherits2","_super","_this","_classCallCheck2","_scrollNodeRef","_innerViewRef","isTouching","lastMomentumScrollBeginTime","lastMomentumScrollEndTime","observedScrollSinceBecomingResponder","becameResponderWhileAnimating","scrollResponderHandleScrollShouldSetResponder","scrollResponderHandleStartShouldSetResponderCapture","scrollResponderIsAnimating","scrollResponderHandleTerminationRequest","scrollResponderHandleTouchEnd","nativeEvent","touches","length","props","onTouchEnd","scrollResponderHandleResponderRelease","onResponderRelease","currentlyFocusedTextInput","currentlyFocusedField","keyboardShouldPersistTaps","target","onScrollResponderKeyboardDismissed","blurTextInput","scrollResponderHandleScroll","onScroll","scrollResponderHandleResponderGrant","onResponderGrant","scrollResponderHandleScrollBeginDrag","onScrollBeginDrag","scrollResponderHandleScrollEndDrag","onScrollEndDrag","scrollResponderHandleMomentumScrollBegin","Date","now","onMomentumScrollBegin","scrollResponderHandleMomentumScrollEnd","onMomentumScrollEnd","scrollResponderHandleTouchStart","onTouchStart","scrollResponderHandleTouchMove","onTouchMove","timeSinceLastMomentumScrollEnd","isAnimating","scrollResponderScrollTo","x","y","animated","console","warn","_ref","node","getScrollableNode","left","top","scroll","behavior","scrollLeft","scrollTop","scrollResponderZoomTo","rect","OS","scrollResponderScrollNativeHandleToKeyboard","nodeHandle","additionalOffset","preventNegativeScrollOffset","additionalScrollOffset","measureLayout","getInnerViewNode","scrollResponderTextInputFocusError","scrollResponderInputMeasureAndScrollToKeyboard","width","height","keyboardScreenY","get","keyboardWillOpenTo","endCoordinates","screenY","scrollOffsetY","Math","max","scrollResponderKeyboardWillShow","onKeyboardWillShow","scrollResponderKeyboardWillHide","onKeyboardWillHide","scrollResponderKeyboardDidShow","onKeyboardDidShow","scrollResponderKeyboardDidHide","onKeyboardDidHide","flashScrollIndicators","scrollResponderFlashScrollIndicators","getScrollResponder","_assertThisInitialized2","getInnerViewRef","getNativeScrollRef","scrollTo","_ref2","scrollToEnd","options","horizontal","scrollResponderNode","scrollWidth","scrollHeight","_handleContentOnLayout","_e$nativeEvent$layout","layout","onContentSizeChange","_handleScroll","process","env","NODE_ENV","scrollEventThrottle","log","keyboardDismissMode","_setInnerViewRef","_setScrollNodeRef","ref","forwardedRef","_createClass2","key","value","scrollResponderHandleStartShouldSetResponder","scrollResponderHandleResponderReject","error","render","_this$props","contentContainerStyle","refreshControl","stickyHeaderIndices","pagingEnabled","centerContent","other","style","flatten","childLayoutProps","filter","prop","undefined","JSON","stringify","contentSizeChangeProps","onLayout","hasStickyHeaderIndices","Array","isArray","children","Children","map","child","i","isSticky","indexOf","createElement","styles","stickyHeader","pagingEnabledChild","contentContainer","collapsable","contentContainerHorizontal","contentContainerCenterContent","baseStyle","baseHorizontal","baseVertical","pagingEnabledStyle","pagingEnabledHorizontal","pagingEnabledVertical","onStartShouldSetResponder","onStartShouldSetResponderCapture","onScrollShouldSetResponder","onResponderTerminationRequest","onResponderTerminate","scrollResponderHandleTerminate","onResponderReject","ScrollViewClass","scrollView","cloneElement","Component","commonStyle","flexGrow","flexShrink","transform","WebkitOverflowScrolling","create","flexDirection","overflowX","overflowY","justifyContent","position","zIndex","scrollSnapType","scrollSnapAlign","ForwardedScrollView","forwardRef","displayName","_default","exports"],"sources":["C:/Users/Anirudh/New folder/amplify/frontend/node_modules/react-native-web/dist/exports/ScrollView/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\r\nimport _extends from \"@babel/runtime/helpers/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"contentContainerStyle\", \"horizontal\", \"onContentSizeChange\", \"refreshControl\", \"stickyHeaderIndices\", \"pagingEnabled\", \"forwardedRef\", \"keyboardDismissMode\", \"onScroll\", \"centerContent\"];\r\n/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\n\r\nimport Dimensions from '../Dimensions';\r\nimport dismissKeyboard from '../../modules/dismissKeyboard';\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport mergeRefs from '../../modules/mergeRefs';\r\nimport Platform from '../Platform';\r\nimport ScrollViewBase from './ScrollViewBase';\r\nimport StyleSheet from '../StyleSheet';\r\nimport TextInputState from '../../modules/TextInputState';\r\nimport UIManager from '../UIManager';\r\nimport View from '../View';\r\nimport React from 'react';\r\nimport warning from 'fbjs/lib/warning';\r\nvar emptyObject = {};\r\nvar IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;\r\nclass ScrollView extends React.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    this._scrollNodeRef = null;\r\n    this._innerViewRef = null;\r\n    this.isTouching = false;\r\n    this.lastMomentumScrollBeginTime = 0;\r\n    this.lastMomentumScrollEndTime = 0;\r\n    this.observedScrollSinceBecomingResponder = false;\r\n    this.becameResponderWhileAnimating = false;\r\n    this.scrollResponderHandleScrollShouldSetResponder = () => {\r\n      return this.isTouching;\r\n    };\r\n    this.scrollResponderHandleStartShouldSetResponderCapture = e => {\r\n      // First see if we want to eat taps while the keyboard is up\r\n      // var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\r\n      // if (!this.props.keyboardShouldPersistTaps &&\r\n      //   currentlyFocusedTextInput != null &&\r\n      //   e.target !== currentlyFocusedTextInput) {\r\n      //   return true;\r\n      // }\r\n      return this.scrollResponderIsAnimating();\r\n    };\r\n    this.scrollResponderHandleTerminationRequest = () => {\r\n      return !this.observedScrollSinceBecomingResponder;\r\n    };\r\n    this.scrollResponderHandleTouchEnd = e => {\r\n      var nativeEvent = e.nativeEvent;\r\n      this.isTouching = nativeEvent.touches.length !== 0;\r\n      this.props.onTouchEnd && this.props.onTouchEnd(e);\r\n    };\r\n    this.scrollResponderHandleResponderRelease = e => {\r\n      this.props.onResponderRelease && this.props.onResponderRelease(e);\r\n\r\n      // By default scroll views will unfocus a textField\r\n      // if another touch occurs outside of it\r\n      var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\r\n      if (!this.props.keyboardShouldPersistTaps && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.observedScrollSinceBecomingResponder && !this.becameResponderWhileAnimating) {\r\n        this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);\r\n        TextInputState.blurTextInput(currentlyFocusedTextInput);\r\n      }\r\n    };\r\n    this.scrollResponderHandleScroll = e => {\r\n      this.observedScrollSinceBecomingResponder = true;\r\n      this.props.onScroll && this.props.onScroll(e);\r\n    };\r\n    this.scrollResponderHandleResponderGrant = e => {\r\n      this.observedScrollSinceBecomingResponder = false;\r\n      this.props.onResponderGrant && this.props.onResponderGrant(e);\r\n      this.becameResponderWhileAnimating = this.scrollResponderIsAnimating();\r\n    };\r\n    this.scrollResponderHandleScrollBeginDrag = e => {\r\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\r\n    };\r\n    this.scrollResponderHandleScrollEndDrag = e => {\r\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\r\n    };\r\n    this.scrollResponderHandleMomentumScrollBegin = e => {\r\n      this.lastMomentumScrollBeginTime = Date.now();\r\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\r\n    };\r\n    this.scrollResponderHandleMomentumScrollEnd = e => {\r\n      this.lastMomentumScrollEndTime = Date.now();\r\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\r\n    };\r\n    this.scrollResponderHandleTouchStart = e => {\r\n      this.isTouching = true;\r\n      this.props.onTouchStart && this.props.onTouchStart(e);\r\n    };\r\n    this.scrollResponderHandleTouchMove = e => {\r\n      this.props.onTouchMove && this.props.onTouchMove(e);\r\n    };\r\n    this.scrollResponderIsAnimating = () => {\r\n      var now = Date.now();\r\n      var timeSinceLastMomentumScrollEnd = now - this.lastMomentumScrollEndTime;\r\n      var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.lastMomentumScrollEndTime < this.lastMomentumScrollBeginTime;\r\n      return isAnimating;\r\n    };\r\n    this.scrollResponderScrollTo = (x, y, animated) => {\r\n      if (typeof x === 'number') {\r\n        console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');\r\n      } else {\r\n        var _ref = x || emptyObject;\r\n        x = _ref.x;\r\n        y = _ref.y;\r\n        animated = _ref.animated;\r\n      }\r\n      var node = this.getScrollableNode();\r\n      var left = x || 0;\r\n      var top = y || 0;\r\n      if (node != null) {\r\n        if (typeof node.scroll === 'function') {\r\n          node.scroll({\r\n            top,\r\n            left,\r\n            behavior: !animated ? 'auto' : 'smooth'\r\n          });\r\n        } else {\r\n          node.scrollLeft = left;\r\n          node.scrollTop = top;\r\n        }\r\n      }\r\n    };\r\n    this.scrollResponderZoomTo = (rect, animated) => {\r\n      if (Platform.OS !== 'ios') {\r\n        invariant('zoomToRect is not implemented');\r\n      }\r\n    };\r\n    this.scrollResponderScrollNativeHandleToKeyboard = (nodeHandle, additionalOffset, preventNegativeScrollOffset) => {\r\n      this.additionalScrollOffset = additionalOffset || 0;\r\n      this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;\r\n      UIManager.measureLayout(nodeHandle, this.getInnerViewNode(), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);\r\n    };\r\n    this.scrollResponderInputMeasureAndScrollToKeyboard = (left, top, width, height) => {\r\n      var keyboardScreenY = Dimensions.get('window').height;\r\n      if (this.keyboardWillOpenTo) {\r\n        keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;\r\n      }\r\n      var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset;\r\n\r\n      // By default, this can scroll with negative offset, pulling the content\r\n      // down so that the target component's bottom meets the keyboard's top.\r\n      // If requested otherwise, cap the offset at 0 minimum to avoid content\r\n      // shifting down.\r\n      if (this.preventNegativeScrollOffset) {\r\n        scrollOffsetY = Math.max(0, scrollOffsetY);\r\n      }\r\n      this.scrollResponderScrollTo({\r\n        x: 0,\r\n        y: scrollOffsetY,\r\n        animated: true\r\n      });\r\n      this.additionalOffset = 0;\r\n      this.preventNegativeScrollOffset = false;\r\n    };\r\n    this.scrollResponderKeyboardWillShow = e => {\r\n      this.keyboardWillOpenTo = e;\r\n      this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);\r\n    };\r\n    this.scrollResponderKeyboardWillHide = e => {\r\n      this.keyboardWillOpenTo = null;\r\n      this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);\r\n    };\r\n    this.scrollResponderKeyboardDidShow = e => {\r\n      // TODO(7693961): The event for DidShow is not available on iOS yet.\r\n      // Use the one from WillShow and do not assign.\r\n      if (e) {\r\n        this.keyboardWillOpenTo = e;\r\n      }\r\n      this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);\r\n    };\r\n    this.scrollResponderKeyboardDidHide = e => {\r\n      this.keyboardWillOpenTo = null;\r\n      this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);\r\n    };\r\n    this.flashScrollIndicators = () => {\r\n      this.scrollResponderFlashScrollIndicators();\r\n    };\r\n    this.getScrollResponder = () => {\r\n      return this;\r\n    };\r\n    this.getScrollableNode = () => {\r\n      return this._scrollNodeRef;\r\n    };\r\n    this.getInnerViewRef = () => {\r\n      return this._innerViewRef;\r\n    };\r\n    this.getInnerViewNode = () => {\r\n      return this._innerViewRef;\r\n    };\r\n    this.getNativeScrollRef = () => {\r\n      return this._scrollNodeRef;\r\n    };\r\n    this.scrollTo = (y, x, animated) => {\r\n      if (typeof y === 'number') {\r\n        console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');\r\n      } else {\r\n        var _ref2 = y || emptyObject;\r\n        x = _ref2.x;\r\n        y = _ref2.y;\r\n        animated = _ref2.animated;\r\n      }\r\n      this.scrollResponderScrollTo({\r\n        x: x || 0,\r\n        y: y || 0,\r\n        animated: animated !== false\r\n      });\r\n    };\r\n    this.scrollToEnd = options => {\r\n      // Default to true\r\n      var animated = (options && options.animated) !== false;\r\n      var horizontal = this.props.horizontal;\r\n      var scrollResponderNode = this.getScrollableNode();\r\n      var x = horizontal ? scrollResponderNode.scrollWidth : 0;\r\n      var y = horizontal ? 0 : scrollResponderNode.scrollHeight;\r\n      this.scrollResponderScrollTo({\r\n        x,\r\n        y,\r\n        animated\r\n      });\r\n    };\r\n    this._handleContentOnLayout = e => {\r\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\r\n        width = _e$nativeEvent$layout.width,\r\n        height = _e$nativeEvent$layout.height;\r\n      this.props.onContentSizeChange(width, height);\r\n    };\r\n    this._handleScroll = e => {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (this.props.onScroll && this.props.scrollEventThrottle == null) {\r\n          console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + \"cause frame drops, use a bigger number if you don't need as \" + 'much precision.');\r\n        }\r\n      }\r\n      if (this.props.keyboardDismissMode === 'on-drag') {\r\n        dismissKeyboard();\r\n      }\r\n      this.scrollResponderHandleScroll(e);\r\n    };\r\n    this._setInnerViewRef = node => {\r\n      this._innerViewRef = node;\r\n    };\r\n    this._setScrollNodeRef = node => {\r\n      this._scrollNodeRef = node;\r\n      // ScrollView needs to add more methods to the hostNode in addition to those\r\n      // added by `usePlatformMethods`. This is temporarily until an API like\r\n      // `ScrollView.scrollTo(hostNode, { x, y })` is added to React Native.\r\n      if (node != null) {\r\n        node.getScrollResponder = this.getScrollResponder;\r\n        node.getInnerViewNode = this.getInnerViewNode;\r\n        node.getInnerViewRef = this.getInnerViewRef;\r\n        node.getNativeScrollRef = this.getNativeScrollRef;\r\n        node.getScrollableNode = this.getScrollableNode;\r\n        node.scrollTo = this.scrollTo;\r\n        node.scrollToEnd = this.scrollToEnd;\r\n        node.flashScrollIndicators = this.flashScrollIndicators;\r\n        node.scrollResponderZoomTo = this.scrollResponderZoomTo;\r\n        node.scrollResponderScrollNativeHandleToKeyboard = this.scrollResponderScrollNativeHandleToKeyboard;\r\n      }\r\n      var ref = mergeRefs(this.props.forwardedRef);\r\n      ref(node);\r\n    };\r\n  }\r\n  /**\r\n   * Merely touch starting is not sufficient for a scroll view to become the\r\n   * responder. Being the \"responder\" means that the very next touch move/end\r\n   * event will result in an action/movement.\r\n   *\r\n   * Invoke this from an `onStartShouldSetResponder` event.\r\n   *\r\n   * `onStartShouldSetResponder` is used when the next move/end will trigger\r\n   * some UI movement/action, but when you want to yield priority to views\r\n   * nested inside of the view.\r\n   *\r\n   * There may be some cases where scroll views actually should return `true`\r\n   * from `onStartShouldSetResponder`: Any time we are detecting a standard tap\r\n   * that gives priority to nested views.\r\n   *\r\n   * - If a single tap on the scroll view triggers an action such as\r\n   *   recentering a map style view yet wants to give priority to interaction\r\n   *   views inside (such as dropped pins or labels), then we would return true\r\n   *   from this method when there is a single touch.\r\n   *\r\n   * - Similar to the previous case, if a two finger \"tap\" should trigger a\r\n   *   zoom, we would check the `touches` count, and if `>= 2`, we would return\r\n   *   true.\r\n   *\r\n   */\r\n  scrollResponderHandleStartShouldSetResponder() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * There are times when the scroll view wants to become the responder\r\n   * (meaning respond to the next immediate `touchStart/touchEnd`), in a way\r\n   * that *doesn't* give priority to nested views (hence the capture phase):\r\n   *\r\n   * - Currently animating.\r\n   * - Tapping anywhere that is not the focused input, while the keyboard is\r\n   *   up (which should dismiss the keyboard).\r\n   *\r\n   * Invoke this from an `onStartShouldSetResponderCapture` event.\r\n   */\r\n\r\n  /**\r\n   * Invoke this from an `onResponderReject` event.\r\n   *\r\n   * Some other element is not yielding its role as responder. Normally, we'd\r\n   * just disable the `UIScrollView`, but a touch has already began on it, the\r\n   * `UIScrollView` will not accept being disabled after that. The easiest\r\n   * solution for now is to accept the limitation of disallowing this\r\n   * altogether. To improve this, find a way to disable the `UIScrollView` after\r\n   * a touch has already started.\r\n   */\r\n  scrollResponderHandleResponderReject() {\r\n    warning(false, \"ScrollView doesn't take rejection well - scrolls anyway\");\r\n  }\r\n\r\n  /**\r\n   * We will allow the scroll view to give up its lock iff it acquired the lock\r\n   * during an animation. This is a very useful default that happens to satisfy\r\n   * many common user experiences.\r\n   *\r\n   * - Stop a scroll on the left edge, then turn that into an outer view's\r\n   *   backswipe.\r\n   * - Stop a scroll mid-bounce at the top, continue pulling to have the outer\r\n   *   view dismiss.\r\n   * - However, without catching the scroll view mid-bounce (while it is\r\n   *   motionless), if you drag far enough for the scroll view to become\r\n   *   responder (and therefore drag the scroll view a bit), any backswipe\r\n   *   navigation of a swipe gesture higher in the view hierarchy, should be\r\n   *   rejected.\r\n   */\r\n\r\n  /**\r\n   * Displays the scroll indicators momentarily.\r\n   */\r\n  scrollResponderFlashScrollIndicators() {}\r\n\r\n  /**\r\n   * This method should be used as the callback to onFocus in a TextInputs'\r\n   * parent view. Note that any module using this mixin needs to return\r\n   * the parent view's ref in getScrollViewRef() in order to use this method.\r\n   * @param {any} nodeHandle The TextInput node handle\r\n   * @param {number} additionalOffset The scroll view's top \"contentInset\".\r\n   *        Default is 0.\r\n   * @param {bool} preventNegativeScrolling Whether to allow pulling the content\r\n   *        down to make it meet the keyboard's top. Default is false.\r\n   */\r\n\r\n  scrollResponderTextInputFocusError(e) {\r\n    console.error('Error measuring text field: ', e);\r\n  }\r\n\r\n  /**\r\n   * Warning, this may be called several times for a single keyboard opening.\r\n   * It's best to store the information in this method and then take any action\r\n   * at a later point (either in `keyboardDidShow` or other).\r\n   *\r\n   * Here's the order that events occur in:\r\n   * - focus\r\n   * - willShow {startCoordinates, endCoordinates} several times\r\n   * - didShow several times\r\n   * - blur\r\n   * - willHide {startCoordinates, endCoordinates} several times\r\n   * - didHide several times\r\n   *\r\n   * The `ScrollResponder` providesModule callbacks for each of these events.\r\n   * Even though any user could have easily listened to keyboard events\r\n   * themselves, using these `props` callbacks ensures that ordering of events\r\n   * is consistent - and not dependent on the order that the keyboard events are\r\n   * subscribed to. This matters when telling the scroll view to scroll to where\r\n   * the keyboard is headed - the scroll responder better have been notified of\r\n   * the keyboard destination before being instructed to scroll to where the\r\n   * keyboard will be. Stick to the `ScrollResponder` callbacks, and everything\r\n   * will work.\r\n   *\r\n   * WARNING: These callbacks will fire even if a keyboard is displayed in a\r\n   * different navigation pane. Filter out the events to determine if they are\r\n   * relevant to you. (For example, only if you receive these callbacks after\r\n   * you had explicitly focused a node etc).\r\n   */\r\n\r\n  render() {\r\n    var _this$props = this.props,\r\n      contentContainerStyle = _this$props.contentContainerStyle,\r\n      horizontal = _this$props.horizontal,\r\n      onContentSizeChange = _this$props.onContentSizeChange,\r\n      refreshControl = _this$props.refreshControl,\r\n      stickyHeaderIndices = _this$props.stickyHeaderIndices,\r\n      pagingEnabled = _this$props.pagingEnabled,\r\n      forwardedRef = _this$props.forwardedRef,\r\n      keyboardDismissMode = _this$props.keyboardDismissMode,\r\n      onScroll = _this$props.onScroll,\r\n      centerContent = _this$props.centerContent,\r\n      other = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n    if (process.env.NODE_ENV !== 'production' && this.props.style) {\r\n      var style = StyleSheet.flatten(this.props.style);\r\n      var childLayoutProps = ['alignItems', 'justifyContent'].filter(prop => style && style[prop] !== undefined);\r\n      invariant(childLayoutProps.length === 0, \"ScrollView child layout (\" + JSON.stringify(childLayoutProps) + \") \" + 'must be applied through the contentContainerStyle prop.');\r\n    }\r\n    var contentSizeChangeProps = {};\r\n    if (onContentSizeChange) {\r\n      contentSizeChangeProps = {\r\n        onLayout: this._handleContentOnLayout\r\n      };\r\n    }\r\n    var hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\r\n    var children = hasStickyHeaderIndices || pagingEnabled ? React.Children.map(this.props.children, (child, i) => {\r\n      var isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\r\n      if (child != null && (isSticky || pagingEnabled)) {\r\n        return /*#__PURE__*/React.createElement(View, {\r\n          style: [isSticky && styles.stickyHeader, pagingEnabled && styles.pagingEnabledChild]\r\n        }, child);\r\n      } else {\r\n        return child;\r\n      }\r\n    }) : this.props.children;\r\n    var contentContainer = /*#__PURE__*/React.createElement(View, _extends({}, contentSizeChangeProps, {\r\n      children: children,\r\n      collapsable: false,\r\n      ref: this._setInnerViewRef,\r\n      style: [horizontal && styles.contentContainerHorizontal, centerContent && styles.contentContainerCenterContent, contentContainerStyle]\r\n    }));\r\n    var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\r\n    var pagingEnabledStyle = horizontal ? styles.pagingEnabledHorizontal : styles.pagingEnabledVertical;\r\n    var props = _objectSpread(_objectSpread({}, other), {}, {\r\n      style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\r\n      onTouchStart: this.scrollResponderHandleTouchStart,\r\n      onTouchMove: this.scrollResponderHandleTouchMove,\r\n      onTouchEnd: this.scrollResponderHandleTouchEnd,\r\n      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\r\n      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\r\n      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\r\n      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\r\n      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\r\n      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\r\n      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\r\n      onScroll: this._handleScroll,\r\n      onResponderGrant: this.scrollResponderHandleResponderGrant,\r\n      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\r\n      onResponderTerminate: this.scrollResponderHandleTerminate,\r\n      onResponderRelease: this.scrollResponderHandleResponderRelease,\r\n      onResponderReject: this.scrollResponderHandleResponderReject\r\n    });\r\n    var ScrollViewClass = ScrollViewBase;\r\n    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');\r\n    var scrollView = /*#__PURE__*/React.createElement(ScrollViewClass, _extends({}, props, {\r\n      ref: this._setScrollNodeRef\r\n    }), contentContainer);\r\n    if (refreshControl) {\r\n      return /*#__PURE__*/React.cloneElement(refreshControl, {\r\n        style: props.style\r\n      }, scrollView);\r\n    }\r\n    return scrollView;\r\n  }\r\n}\r\nvar commonStyle = {\r\n  flexGrow: 1,\r\n  flexShrink: 1,\r\n  // Enable hardware compositing in modern browsers.\r\n  // Creates a new layer with its own backing surface that can significantly\r\n  // improve scroll performance.\r\n  transform: 'translateZ(0)',\r\n  // iOS native scrolling\r\n  WebkitOverflowScrolling: 'touch'\r\n};\r\nvar styles = StyleSheet.create({\r\n  baseVertical: _objectSpread(_objectSpread({}, commonStyle), {}, {\r\n    flexDirection: 'column',\r\n    overflowX: 'hidden',\r\n    overflowY: 'auto'\r\n  }),\r\n  baseHorizontal: _objectSpread(_objectSpread({}, commonStyle), {}, {\r\n    flexDirection: 'row',\r\n    overflowX: 'auto',\r\n    overflowY: 'hidden'\r\n  }),\r\n  contentContainerHorizontal: {\r\n    flexDirection: 'row'\r\n  },\r\n  contentContainerCenterContent: {\r\n    justifyContent: 'center',\r\n    flexGrow: 1\r\n  },\r\n  stickyHeader: {\r\n    position: 'sticky',\r\n    top: 0,\r\n    zIndex: 10\r\n  },\r\n  pagingEnabledHorizontal: {\r\n    scrollSnapType: 'x mandatory'\r\n  },\r\n  pagingEnabledVertical: {\r\n    scrollSnapType: 'y mandatory'\r\n  },\r\n  pagingEnabledChild: {\r\n    scrollSnapAlign: 'start'\r\n  }\r\n});\r\nvar ForwardedScrollView = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\r\n  return /*#__PURE__*/React.createElement(ScrollView, _extends({}, props, {\r\n    forwardedRef: forwardedRef\r\n  }));\r\n});\r\nForwardedScrollView.displayName = 'ScrollView';\r\nexport default ForwardedScrollView;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}