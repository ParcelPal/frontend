{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport mainApp from \"./screens/Main\";\nimport { Amplify } from 'aws-amplify';\nimport awsExports from \"./aws-exports\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { AuthProvider } from \"./AuthProvider\";\nimport awsConfig from \"./aws-exports\";\nimport { fromLeft } from 'react-navigation-transitions';\nimport CreateOrder from \"./screens/CreateOrder\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar isLocalhost = Boolean(__DEV__);\nvar handleCustomTransition = function handleCustomTransition(_ref) {\n  var scenes = _ref.scenes;\n  var prevScene = scenes[scenes.length - 2];\n  var nextScene = scenes[scenes.length - 1];\n  if (prevScene && prevScene.route.routeName === 'Login/SignUp' && nextScene.route.routeName === 'ScreenB') {\n    return zoomIn();\n  } else if (prevScene && prevScene.route.routeName === 'ScreenB' && nextScene.route.routeName === 'ScreenC') {\n    return zoomOut();\n  }\n  return fromLeft();\n};\nvar Stack = createNativeStackNavigator();\nAmplify.configure(awsExports);\nconsole.log(Platform.OS);\nexport default function App() {\n  console.log('hello');\n  return _jsx(NavigationContainer, {\n    children: _jsx(AuthProvider, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: \"Login/SignUp\",\n        screenOptions: {\n          headerTitleStyle: {\n            fontWeight: 'bold',\n            headerBackground: 'powderblue'\n          },\n          headerShown: false,\n          headerTitleAlign: 'center',\n          cardStyleInterpolator: function cardStyleInterpolator(_ref2) {\n            var current = _ref2.current,\n              layouts = _ref2.layouts;\n            return {\n              cardStyle: {\n                transform: [{\n                  translateX: current.progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [layouts.screen.width, 0]\n                  })\n                }]\n              }\n            };\n          }\n        },\n        transitionConfig: function transitionConfig(config) {\n          return handleCustomTransition(config);\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Login/SignUp\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"ProfileScreen\",\n          component: mainApp,\n          options: {\n            title: ''\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","React","StyleSheet","Platform","Text","View","LoginScreen","mainApp","Amplify","awsExports","NavigationContainer","createNativeStackNavigator","AuthProvider","awsConfig","fromLeft","CreateOrder","jsx","_jsx","jsxs","_jsxs","isLocalhost","Boolean","__DEV__","handleCustomTransition","_ref","scenes","prevScene","length","nextScene","route","routeName","zoomIn","zoomOut","Stack","configure","console","log","OS","App","children","Navigator","initialRouteName","screenOptions","headerTitleStyle","fontWeight","headerBackground","headerShown","headerTitleAlign","cardStyleInterpolator","_ref2","current","layouts","cardStyle","transform","translateX","progress","interpolate","inputRange","outputRange","screen","width","transitionConfig","config","Screen","name","component","options","title","styles","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/ubuntu/Documents/airmeeds/frontend/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Platform, Text, View } from 'react-native';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport mainApp from './screens/Main';\r\nimport { Amplify } from 'aws-amplify';\r\nimport awsExports from './aws-exports';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { AuthProvider } from './AuthProvider';\r\n\r\nimport awsConfig from \"./aws-exports\";\r\nimport { fromLeft } from 'react-navigation-transitions';\r\nimport CreateOrder from './screens/CreateOrder';\r\n\r\nconst isLocalhost = Boolean(__DEV__);\r\n\r\n// Assuming you have two redirect URIs, and the first is for localhost and second is for production\r\n// const [\r\n//   localRedirectSignIn,\r\n//   productionRedirectSignIn,\r\n// ] = awsConfig.oauth.redirectSignIn.split(\",\");\r\n\r\n// const [\r\n//   localRedirectSignOut,\r\n//   productionRedirectSignOut,\r\n// ] = awsConfig.oauth.redirectSignOut.split(\",\");\r\n\r\n// const updatedAwsConfig = {\r\n//   ...awsConfig,\r\n//   oauth: {\r\n//     ...awsConfig.oauth,\r\n//     redirectSignIn: isLocalhost ? localRedirectSignIn : productionRedirectSignIn,\r\n//     redirectSignOut: isLocalhost ? localRedirectSignOut : productionRedirectSignOut,\r\n//   }\r\n// }\r\n// Amplify.configure(updatedAwsConfig)\r\nconst handleCustomTransition = ({ scenes }) => {\r\n  const prevScene = scenes[scenes.length - 2];\r\n  const nextScene = scenes[scenes.length - 1];\r\n\r\n  // Custom transitions go there\r\n  if (prevScene\r\n&& prevScene.route.routeName === 'Login/SignUp'\r\n    && nextScene.route.routeName === 'ScreenB') {\r\n    return zoomIn();\r\n  } else if (prevScene\r\n    && prevScene.route.routeName === 'ScreenB'\r\n    && nextScene.route.routeName === 'ScreenC') {\r\n    return zoomOut();\r\n  }\r\n  return fromLeft();\r\n}\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nAmplify.configure(awsExports);\r\nconsole.log(Platform.OS)\r\nexport default function App() {\r\n  console.log('hello')\r\n  return (\r\n    <NavigationContainer>\r\n    <AuthProvider>\r\n<Stack.Navigator initialRouteName=\"Login/SignUp\"  screenOptions={{\r\n         headerTitleStyle: { fontWeight: 'bold' ,headerBackground: 'powderblue'},\r\nheaderShown: false,\r\n         headerTitleAlign: 'center',\r\n         cardStyleInterpolator: ({ current, layouts }) => {\r\n          return {\r\n            cardStyle: {\r\n              transform: [\r\n                {\r\n                  translateX: current.progress.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [layouts.screen.width, 0],\r\n                  }),\r\n                },\r\n              ],\r\n            },\r\n          };\r\n        }\r\n}} \r\ntransitionConfig={(config) =>handleCustomTransition(config)}\r\n>\r\n  <Stack.Screen name=\"Login/SignUp\" component={LoginScreen} />\r\n  <Stack.Screen name=\"ProfileScreen\" component={mainApp}  options={{\r\n          title: '',\r\n  }}/>\r\n    </Stack.Navigator>  \r\n    </AuthProvider>\r\n  </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,WAAW;AAClB,OAAOC,OAAO;AACd,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,UAAU;AACjB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,YAAY;AAErB,OAAOC,SAAS;AAChB,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,OAAOC,WAAW;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,IAAMC,WAAW,GAAGC,OAAO,CAACC,OAAO,CAAC;AAsBpC,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAAC,IAAA,EAAmB;EAAA,IAAbC,MAAM,GAAAD,IAAA,CAANC,MAAM;EACtC,IAAMC,SAAS,GAAGD,MAAM,CAACA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC;EAC3C,IAAMC,SAAS,GAAGH,MAAM,CAACA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC;EAG3C,IAAID,SAAS,IACZA,SAAS,CAACG,KAAK,CAACC,SAAS,KAAK,cAAc,IACxCF,SAAS,CAACC,KAAK,CAACC,SAAS,KAAK,SAAS,EAAE;IAC5C,OAAOC,MAAM,CAAC,CAAC;EACjB,CAAC,MAAM,IAAIL,SAAS,IACfA,SAAS,CAACG,KAAK,CAACC,SAAS,KAAK,SAAS,IACvCF,SAAS,CAACC,KAAK,CAACC,SAAS,KAAK,SAAS,EAAE;IAC5C,OAAOE,OAAO,CAAC,CAAC;EAClB;EACA,OAAOlB,QAAQ,CAAC,CAAC;AACnB,CAAC;AAGD,IAAMmB,KAAK,GAAGtB,0BAA0B,CAAC,CAAC;AAE1CH,OAAO,CAAC0B,SAAS,CAACzB,UAAU,CAAC;AAC7B0B,OAAO,CAACC,GAAG,CAACjC,QAAQ,CAACkC,EAAE,CAAC;AACxB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5BH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpB,OACEnB,IAAA,CAACP,mBAAmB;IAAA6B,QAAA,EACpBtB,IAAA,CAACL,YAAY;MAAA2B,QAAA,EACjBpB,KAAA,CAACc,KAAK,CAACO,SAAS;QAACC,gBAAgB,EAAC,cAAc;QAAEC,aAAa,EAAE;UACxDC,gBAAgB,EAAE;YAAEC,UAAU,EAAE,MAAM;YAAEC,gBAAgB,EAAE;UAAY,CAAC;UAChFC,WAAW,EAAE,KAAK;UACTC,gBAAgB,EAAE,QAAQ;UAC1BC,qBAAqB,EAAE,SAAAA,sBAAAC,KAAA,EAA0B;YAAA,IAAvBC,OAAO,GAAAD,KAAA,CAAPC,OAAO;cAAEC,OAAO,GAAAF,KAAA,CAAPE,OAAO;YACzC,OAAO;cACLC,SAAS,EAAE;gBACTC,SAAS,EAAE,CACT;kBACEC,UAAU,EAAEJ,OAAO,CAACK,QAAQ,CAACC,WAAW,CAAC;oBACvCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;oBAClBC,WAAW,EAAE,CAACP,OAAO,CAACQ,MAAM,CAACC,KAAK,EAAE,CAAC;kBACvC,CAAC;gBACH,CAAC;cAEL;YACF,CAAC;UACH;QACR,CAAE;QACFC,gBAAgB,EAAE,SAAAA,iBAACC,MAAM;UAAA,OAAIvC,sBAAsB,CAACuC,MAAM,CAAC;QAAA,CAAC;QAAAvB,QAAA,GAE1DtB,IAAA,CAACgB,KAAK,CAAC8B,MAAM;UAACC,IAAI,EAAC,cAAc;UAACC,SAAS,EAAE3D;QAAY,CAAE,CAAC,EAC5DW,IAAA,CAACgB,KAAK,CAAC8B,MAAM;UAACC,IAAI,EAAC,eAAe;UAACC,SAAS,EAAE1D,OAAQ;UAAE2D,OAAO,EAAE;YACzDC,KAAK,EAAE;UACf;QAAE,CAAC,CAAC;MAAA,CACe;IAAC,CACJ;EAAC,CACI,CAAC;AAExB;AAEA,IAAMC,MAAM,GAAGlE,UAAU,CAACmE,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}