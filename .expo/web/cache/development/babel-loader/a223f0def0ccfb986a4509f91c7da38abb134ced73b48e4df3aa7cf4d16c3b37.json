{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Auth } from 'aws-amplify';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginSignUpScreen = function LoginSignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isSignUp = _useState6[0],\n    setIsSignUp = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmUser = _useState8[0],\n    setConfirmUser = _useState8[1];\n  function handleLogin() {\n    return _handleLogin.apply(this, arguments);\n  }\n  function _handleLogin() {\n    _handleLogin = _asyncToGenerator(function* () {\n      if (confirmUser) {\n        confirmSignUp();\n      } else {\n        console.log('here');\n        try {\n          var user = yield Auth.signIn(username, password);\n          navigation.navigate('ProfileScreen', {\n            user: user\n          });\n          console.log(user);\n        } catch (error) {\n          console.log('error signing in', error);\n        }\n      }\n    });\n    return _handleLogin.apply(this, arguments);\n  }\n  function handleSignUp() {\n    return _handleSignUp.apply(this, arguments);\n  }\n  function _handleSignUp() {\n    _handleSignUp = _asyncToGenerator(function* () {\n      try {\n        var _yield$Auth$signUp = yield Auth.signUp({\n            username: username,\n            password: password,\n            attributes: {},\n            autoSignIn: {\n              enabled: true\n            }\n          }),\n          user = _yield$Auth$signUp.user;\n        setConfirmUser(true);\n        console.log(user);\n      } catch (error) {\n        console.log('error signing up:', error);\n      }\n    });\n    return _handleSignUp.apply(this, arguments);\n  }\n  function confirmSignUp() {\n    return _confirmSignUp.apply(this, arguments);\n  }\n  function _confirmSignUp() {\n    _confirmSignUp = _asyncToGenerator(function* () {\n      try {\n        var _yield$Auth$confirmSi = yield Auth.confirmSignUp(username, password),\n          user = _yield$Auth$confirmSi.user;\n        console.log(user);\n      } catch (error) {\n        console.log('error confirming sign up', error);\n      }\n    });\n    return _confirmSignUp.apply(this, arguments);\n  }\n  return _jsx(ImageBackground, {\n    source: require(\"./background-image.jpg\"),\n    style: styles.backgroundImage,\n    resizeMode: \"cover\",\n    position: \"relative\",\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: isSignUp ? 'Create Account' : 'Welcome to ParcelPal'\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Username\",\n        onChangeText: function onChangeText(text) {\n          return setUsername(text);\n        },\n        value: username,\n        keyboardType: \"email-address\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        value: password,\n        secureTextEntry: true\n      }), isSignUp && _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Confirm Password\",\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: isSignUp ? handleSignUp : handleLogin,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: isSignUp ? 'Sign Up' : 'Login'\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setIsSignUp(!isSignUp);\n        },\n        children: _jsx(Text, {\n          style: styles.toggleText,\n          children: isSignUp ? 'Already have an account? Log In' : 'Donâ€™t have an account? Sign Up'\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 0\n  },\n  headerText: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'grey',\n    marginBottom: 30\n  },\n  input: {\n    width: '90%',\n    height: 50,\n    borderColor: 'white',\n    borderBottomWidth: 1,\n    color: 'white',\n    fontSize: 16,\n    marginBottom: 20,\n    backgroundColor: 'transparent'\n  },\n  button: {\n    backgroundColor: 'aquamarine',\n    width: '90%',\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n    borderColor: 'white',\n    borderRadius: 25\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  toggleText: {\n    marginTop: 20,\n    color: 'grey',\n    textDecorationLine: 'underline'\n  }\n});\nexport default LoginSignUpScreen;","map":{"version":3,"names":["React","useState","Auth","View","Text","TextInput","TouchableOpacity","StyleSheet","ImageBackground","jsx","_jsx","jsxs","_jsxs","LoginSignUpScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","isSignUp","setIsSignUp","_useState7","_useState8","confirmUser","setConfirmUser","handleLogin","_handleLogin","apply","arguments","_asyncToGenerator","confirmSignUp","console","log","user","signIn","navigate","error","handleSignUp","_handleSignUp","_yield$Auth$signUp","signUp","attributes","autoSignIn","enabled","_confirmSignUp","_yield$Auth$confirmSi","source","require","style","styles","backgroundImage","resizeMode","position","children","container","headerText","input","placeholder","onChangeText","text","value","keyboardType","secureTextEntry","button","onPress","buttonText","toggleText","create","flex","width","height","justifyContent","alignItems","paddingHorizontal","fontSize","fontWeight","color","marginBottom","borderColor","borderBottomWidth","backgroundColor","borderWidth","borderRadius","marginTop","textDecorationLine"],"sources":["C:/Users/Anirudh/New folder/amplify/frontend/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Auth } from 'aws-amplify';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ImageBackground,\r\n} from 'react-native';\r\n\r\nconst LoginSignUpScreen = ({navigation}) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const [confirmUser, setConfirmUser] = useState(false);\r\n\r\nasync function handleLogin() {\r\n  if(confirmUser){\r\n    confirmSignUp();\r\n  }\r\n  else{\r\n  console.log('here')\r\n    try {\r\n    const user = await Auth.signIn(username, password);\r\n    navigation.navigate('ProfileScreen', {user});\r\n    console.log(user)\r\n  } catch (error) {\r\n    console.log('error signing in', error);\r\n  }\r\n}\r\n}\r\n\r\n\r\nasync function handleSignUp() {\r\n  \r\n  try {\r\n    const { user } = await Auth.signUp({\r\n      username,\r\n      password,\r\n      attributes: {\r\n        // other custom attributes \r\n      },\r\n      autoSignIn: { // optional - enables auto sign in after user is confirmed\r\n        enabled: true,\r\n      }\r\n    });\r\n    setConfirmUser(true);\r\n    console.log(user);\r\n  } catch (error) {\r\n    console.log('error signing up:', error);\r\n  }\r\n}\r\nasync function confirmSignUp() {\r\n  try {\r\n   const {user} = await Auth.confirmSignUp(username, password);\r\n    console.log(user)\r\n  } catch (error) {\r\n    console.log('error confirming sign up', error);\r\n  }\r\n}\r\n  return (\r\n    <ImageBackground\r\n      source={require('./background-image.jpg')}\r\n      style={styles.backgroundImage}\r\n      resizeMode=\"cover\" \r\n      position='relative'\r\n    >\r\n      <View style={styles.container}>\r\n        <Text style={styles.headerText}>\r\n          {isSignUp ? 'Create Account' : 'Welcome to ParcelPal'}\r\n        </Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Username\"\r\n          onChangeText={(text) => setUsername(text)}\r\n          value={username}\r\n          keyboardType=\"email-address\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Password\"\r\n          onChangeText={(text) => setPassword(text)}\r\n          value={password}\r\n          secureTextEntry\r\n        />\r\n        {isSignUp && (\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Confirm Password\"\r\n            secureTextEntry\r\n          />\r\n        )}\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={isSignUp ? handleSignUp : handleLogin}\r\n        >\r\n          <Text style={styles.buttonText}>\r\n            {isSignUp ? 'Sign Up' : 'Login'}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => setIsSignUp(!isSignUp)}\r\n        >\r\n          <Text style={styles.toggleText}>\r\n            {isSignUp\r\n              ? 'Already have an account? Log In'\r\n              : 'Donâ€™t have an account? Sign Up'}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backgroundImage: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 0,\r\n  },\r\n  headerText: {\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    color: 'grey',\r\n    marginBottom: 30,\r\n  },\r\n  input: {\r\n    width: '90%',\r\n    height: 50,\r\n    borderColor: 'white',\r\n    borderBottomWidth: 1,\r\n    color: 'white',\r\n    fontSize: 16,\r\n    marginBottom: 20,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  button: {\r\n    backgroundColor: 'aquamarine',\r\n    width: '90%',\r\n    height: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 2,\r\n    borderColor: 'white',\r\n    borderRadius: 25,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n  },\r\n  toggleText: {\r\n    marginTop: 20,\r\n    color: 'grey',\r\n    textDecorationLine: 'underline',\r\n  },\r\n});\r\n\r\nexport default LoginSignUpScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}