{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _expo = require(\"expo\");\nrequire(\"react-native-url-polyfill/auto\");\nrequire(\"react-native-get-random-values\");\nvar _reactNative = require(\"react-native\");\nvar _App = _interopRequireDefault(require(\"./App\"));\nvar _app = require(\"./app.json\");\n_reactNative.AppRegistry.registerComponent(_app.name, function () {\n  return _App.default;\n});","map":{"version":3,"names":["_expo","require","_reactNative","_App","_interopRequireDefault","_app","AppRegistry","registerComponent","appName","App"],"sources":["C:/Users/Anirudh/New folder/amplify/frontend/index.js"],"sourcesContent":["import { registerRootComponent } from 'expo';\r\n\r\n// import App from './App';\r\n// index.js\r\nimport 'react-native-url-polyfill/auto';\r\nimport 'react-native-get-random-values';\r\n\r\nimport { AppRegistry } from 'react-native';\r\nimport App from './App';\r\nimport { name as appName } from './app.json';\r\n\r\nAppRegistry.registerComponent(appName, () => App);\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\n// registerRootComponent(App);\r\n/*\r\nimport { AppRegistry } from 'react-native';\r\nimport { firebaseConfig } from './firebaseConfig'; // Import your Firebase config\r\nimport { name as appName } from './app.json';\r\nimport { initializeApp } from 'firebase/app'; \r\n*/"],"mappings":";AAAA,IAAAA,KAAA,GAAAC,OAAA;AAIAA,OAAA;AACAA,OAAA;AAEA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,IAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,IAAA,GAAAJ,OAAA;AAEAK,wBAAW,CAACC,iBAAiB,CAACC,SAAO,EAAE;EAAA,OAAMC,YAAG;AAAA,EAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}