{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _createForOfIteratorHelperLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _RefreshControl = _interopRequireDefault(require(\"../../../exports/RefreshControl\"));\nvar _ScrollView = _interopRequireDefault(require(\"../../../exports/ScrollView\"));\nvar _View = _interopRequireDefault(require(\"../../../exports/View\"));\nvar _StyleSheet = _interopRequireDefault(require(\"../../../exports/StyleSheet\"));\nvar _findNodeHandle = _interopRequireDefault(require(\"../../../exports/findNodeHandle\"));\nvar _Batchinator = _interopRequireDefault(require(\"../Batchinator\"));\nvar _clamp = _interopRequireDefault(require(\"../Utilities/clamp\"));\nvar _infoLog = _interopRequireDefault(require(\"../infoLog\"));\nvar _CellRenderMask = require(\"./CellRenderMask\");\nvar _ChildListCollection = _interopRequireDefault(require(\"./ChildListCollection\"));\nvar _FillRateHelper = _interopRequireDefault(require(\"../FillRateHelper\"));\nvar _StateSafePureComponent = _interopRequireDefault(require(\"./StateSafePureComponent\"));\nvar _ViewabilityHelper = _interopRequireDefault(require(\"../ViewabilityHelper\"));\nvar _VirtualizedListCellRenderer = _interopRequireDefault(require(\"./VirtualizedListCellRenderer\"));\nvar _VirtualizedListContext = require(\"./VirtualizedListContext.js\");\nvar _VirtualizeUtils = require(\"../VirtualizeUtils\");\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar _nullthrows = _interopRequireDefault(require(\"nullthrows\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar ON_EDGE_REACHED_EPSILON = 0.001;\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n}\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n}\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n}\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold) {\n  return onStartReachedThreshold !== null && onStartReachedThreshold !== void 0 ? onStartReachedThreshold : 2;\n}\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n}\nfunction getScrollingThreshold(threshold, visibleLength) {\n  return threshold * visibleLength / 2;\n}\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n}\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\nfunction findLastWhere(arr, predicate) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\nvar VirtualizedList = function (_StateSafePureCompone) {\n  (0, _inherits2[\"default\"])(VirtualizedList, _StateSafePureCompone);\n  var _super = _createSuper(VirtualizedList);\n  function VirtualizedList(_props) {\n    var _this2;\n    (0, _classCallCheck2[\"default\"])(this, VirtualizedList);\n    var _this$props$updateCel;\n    _this2 = _super.call(this, _props);\n    _this2._getScrollMetrics = function () {\n      return _this2._scrollMetrics;\n    };\n    _this2._getOutermostParentListRef = function () {\n      if (_this2._isNestedWithSameOrientation()) {\n        return _this2.context.getOutermostParentListRef();\n      } else {\n        return (0, _assertThisInitialized2[\"default\"])(_this2);\n      }\n    };\n    _this2._registerAsNestedChild = function (childList) {\n      _this2._nestedChildLists.add(childList.ref, childList.cellKey);\n      if (_this2._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    _this2._unregisterAsNestedChild = function (childList) {\n      _this2._nestedChildLists.remove(childList.ref);\n    };\n    _this2._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this2._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    _this2._getSpacerKey = function (isVertical) {\n      return isVertical ? 'height' : 'width';\n    };\n    _this2._averageCellLength = 0;\n    _this2._cellRefs = {};\n    _this2._frames = {};\n    _this2._footerLength = 0;\n    _this2._hasTriggeredInitialScrollToIndex = false;\n    _this2._hasInteracted = false;\n    _this2._hasMore = false;\n    _this2._hasWarned = {};\n    _this2._headerLength = 0;\n    _this2._hiPriInProgress = false;\n    _this2._highestMeasuredFrameIndex = 0;\n    _this2._indicesToKeys = new Map();\n    _this2._lastFocusedCellKey = null;\n    _this2._nestedChildLists = new _ChildListCollection[\"default\"]();\n    _this2._offsetFromParentVirtualizedList = 0;\n    _this2._prevParentOffset = 0;\n    _this2._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0,\n      zoomScale: 1\n    };\n    _this2._scrollRef = null;\n    _this2._sentStartForContentLength = 0;\n    _this2._sentEndForContentLength = 0;\n    _this2._totalCellLength = 0;\n    _this2._totalCellsMeasured = 0;\n    _this2._viewabilityTuples = [];\n    _this2._captureScrollRef = function (ref) {\n      _this2._scrollRef = ref;\n    };\n    _this2._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n      if (_this2._isNestedWithSameOrientation()) {\n        return React.createElement(_View[\"default\"], props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n        (0, _invariant[\"default\"])(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return React.createElement(_ScrollView[\"default\"], (0, _extends2[\"default\"])({}, props, {\n          refreshControl: props.refreshControl == null ? React.createElement(_RefreshControl[\"default\"], {\n            refreshing: props.refreshing,\n            onRefresh: onRefresh,\n            progressViewOffset: props.progressViewOffset\n          }) : props.refreshControl\n        }));\n      } else {\n        return React.createElement(_ScrollView[\"default\"], props);\n      }\n    };\n    _this2._onCellLayout = function (e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: _this2._selectOffset(layout),\n        length: _this2._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = _this2._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        _this2._totalCellLength += next.length - (curr ? curr.length : 0);\n        _this2._totalCellsMeasured += curr ? 0 : 1;\n        _this2._averageCellLength = _this2._totalCellLength / _this2._totalCellsMeasured;\n        _this2._frames[cellKey] = next;\n        _this2._highestMeasuredFrameIndex = Math.max(_this2._highestMeasuredFrameIndex, index);\n        _this2._scheduleCellsToRenderUpdate();\n      } else {\n        _this2._frames[cellKey].inLayout = true;\n      }\n      _this2._triggerRemeasureForChildListsInCell(cellKey);\n      _this2._computeBlankness();\n      _this2._updateViewableItems(_this2.props, _this2.state.cellsAroundViewport);\n    };\n    _this2._onCellUnmount = function (cellKey) {\n      delete _this2._cellRefs[cellKey];\n      var curr = _this2._frames[cellKey];\n      if (curr) {\n        _this2._frames[cellKey] = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    _this2._onLayout = function (e) {\n      if (_this2._isNestedWithSameOrientation()) {\n        _this2.measureLayoutRelativeToContainingList();\n      } else {\n        _this2._scrollMetrics.visibleLength = _this2._selectLength(e.nativeEvent.layout);\n      }\n      _this2.props.onLayout && _this2.props.onLayout(e);\n      _this2._scheduleCellsToRenderUpdate();\n      _this2._maybeCallOnEdgeReached();\n    };\n    _this2._onLayoutEmpty = function (e) {\n      _this2.props.onLayout && _this2.props.onLayout(e);\n    };\n    _this2._onLayoutFooter = function (e) {\n      _this2._triggerRemeasureForChildListsInCell(_this2._getFooterCellKey());\n      _this2._footerLength = _this2._selectLength(e.nativeEvent.layout);\n    };\n    _this2._onLayoutHeader = function (e) {\n      _this2._headerLength = _this2._selectLength(e.nativeEvent.layout);\n    };\n    _this2._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this2.props.initialScrollIndex != null && _this2.props.initialScrollIndex > 0 && !_this2._hasTriggeredInitialScrollToIndex) {\n        if (_this2.props.contentOffset == null) {\n          if (_this2.props.initialScrollIndex < _this2.props.getItemCount(_this2.props.data)) {\n            _this2.scrollToIndex({\n              animated: false,\n              index: (0, _nullthrows[\"default\"])(_this2.props.initialScrollIndex)\n            });\n          } else {\n            _this2.scrollToEnd({\n              animated: false\n            });\n          }\n        }\n        _this2._hasTriggeredInitialScrollToIndex = true;\n      }\n      if (_this2.props.onContentSizeChange) {\n        _this2.props.onContentSizeChange(width, height);\n      }\n      _this2._scrollMetrics.contentLength = _this2._selectLength({\n        height: height,\n        width: width\n      });\n      _this2._scheduleCellsToRenderUpdate();\n      _this2._maybeCallOnEdgeReached();\n    };\n    _this2._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this2._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this2._scrollMetrics.offset;\n      var contentLength = _this2._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n    _this2._onScroll = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onScroll(e);\n      });\n      if (_this2.props.onScroll) {\n        _this2.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = _this2._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = _this2._selectLength(e.nativeEvent.contentSize);\n      var offset = _this2._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - _this2._scrollMetrics.offset;\n      if (_this2._isNestedWithSameOrientation()) {\n        if (_this2._scrollMetrics.contentLength === 0) {\n          return;\n        }\n        var _this$_convertParentS = _this2._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = _this2._scrollMetrics.timestamp ? Math.max(1, timestamp - _this2._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && _this2._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this2._hasWarned.perf) {\n        (0, _infoLog[\"default\"])('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this2._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this2._hasWarned.perf = true;\n      }\n      var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n      _this2._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength,\n        zoomScale: zoomScale\n      };\n      _this2._updateViewableItems(_this2.props, _this2.state.cellsAroundViewport);\n      if (!_this2.props) {\n        return;\n      }\n      _this2._maybeCallOnEdgeReached();\n      if (velocity !== 0) {\n        _this2._fillRateHelper.activate();\n      }\n      _this2._computeBlankness();\n      _this2._scheduleCellsToRenderUpdate();\n    };\n    _this2._onScrollBeginDrag = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onScrollBeginDrag(e);\n      });\n      _this2._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      _this2._hasInteracted = true;\n      _this2.props.onScrollBeginDrag && _this2.props.onScrollBeginDrag(e);\n    };\n    _this2._onScrollEndDrag = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        _this2._scrollMetrics.velocity = _this2._selectOffset(velocity);\n      }\n      _this2._computeBlankness();\n      _this2.props.onScrollEndDrag && _this2.props.onScrollEndDrag(e);\n    };\n    _this2._onMomentumScrollBegin = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollBegin(e);\n      });\n      _this2.props.onMomentumScrollBegin && _this2.props.onMomentumScrollBegin(e);\n    };\n    _this2._onMomentumScrollEnd = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollEnd(e);\n      });\n      _this2._scrollMetrics.velocity = 0;\n      _this2._computeBlankness();\n      _this2.props.onMomentumScrollEnd && _this2.props.onMomentumScrollEnd(e);\n    };\n    _this2._updateCellsToRender = function () {\n      _this2._updateViewableItems(_this2.props, _this2.state.cellsAroundViewport);\n      _this2.setState(function (state, props) {\n        var cellsAroundViewport = _this2._adjustCellsAroundViewport(props, state.cellsAroundViewport);\n        var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, _this2._getNonViewportRenderRegions(props));\n        if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {\n          return null;\n        }\n        return {\n          cellsAroundViewport: cellsAroundViewport,\n          renderMask: renderMask\n        };\n      });\n    };\n    _this2._createViewToken = function (index, isViewable, props) {\n      var data = props.data,\n        getItem = props.getItem;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: _this2._keyExtractor(item, index, props),\n        isViewable: isViewable\n      };\n    };\n    _this2._getOffsetApprox = function (index, props) {\n      if (Number.isInteger(index)) {\n        return _this2.__getFrameMetricsApprox(index, props).offset;\n      } else {\n        var frameMetrics = _this2.__getFrameMetricsApprox(Math.floor(index), props);\n        var remainder = index - Math.floor(index);\n        return frameMetrics.offset + remainder * frameMetrics.length;\n      }\n    };\n    _this2.__getFrameMetricsApprox = function (index, props) {\n      var frame = _this2._getFrameMetrics(index, props);\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var data = props.data,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        (0, _invariant[\"default\"])(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n        (0, _invariant[\"default\"])(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this2._averageCellLength,\n          offset: _this2._averageCellLength * index\n        };\n      }\n    };\n    _this2._getFrameMetrics = function (index, props) {\n      var data = props.data,\n        getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        getItemLayout = props.getItemLayout;\n      (0, _invariant[\"default\"])(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n      var frame = _this2._frames[_this2._keyExtractor(item, index, props)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          return getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    _this2._getNonViewportRenderRegions = function (props) {\n      if (!(_this2._lastFocusedCellKey && _this2._cellRefs[_this2._lastFocusedCellKey])) {\n        return [];\n      }\n      var lastFocusedCellRenderer = _this2._cellRefs[_this2._lastFocusedCellKey];\n      var focusedCellIndex = lastFocusedCellRenderer.props.index;\n      var itemCount = props.getItemCount(props.data);\n      if (focusedCellIndex >= itemCount || _this2._keyExtractor(props.getItem(props.data, focusedCellIndex), focusedCellIndex, props) !== _this2._lastFocusedCellKey) {\n        return [];\n      }\n      var first = focusedCellIndex;\n      var heightOfCellsBeforeFocused = 0;\n      for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < _this2._scrollMetrics.visibleLength; i--) {\n        first--;\n        heightOfCellsBeforeFocused += _this2.__getFrameMetricsApprox(i, props).length;\n      }\n      var last = focusedCellIndex;\n      var heightOfCellsAfterFocused = 0;\n      for (var _i = last + 1; _i < itemCount && heightOfCellsAfterFocused < _this2._scrollMetrics.visibleLength; _i++) {\n        last++;\n        heightOfCellsAfterFocused += _this2.__getFrameMetricsApprox(_i, props).length;\n      }\n      return [{\n        first: first,\n        last: last\n      }];\n    };\n    _this2._checkProps(_props);\n    _this2._fillRateHelper = new _FillRateHelper[\"default\"](_this2._getFrameMetrics);\n    _this2._updateCellsToRenderBatcher = new _Batchinator[\"default\"](_this2._updateCellsToRender, (_this$props$updateCel = _this2.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n    if (_this2.props.viewabilityConfigCallbackPairs) {\n      _this2._viewabilityTuples = _this2.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new _ViewabilityHelper[\"default\"](pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else {\n      var _this$props3 = _this2.props,\n        onViewableItemsChanged = _this$props3.onViewableItemsChanged,\n        viewabilityConfig = _this$props3.viewabilityConfig;\n      if (onViewableItemsChanged) {\n        _this2._viewabilityTuples.push({\n          viewabilityHelper: new _ViewabilityHelper[\"default\"](viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged\n        });\n      }\n    }\n    var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);\n    _this2.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion)\n    };\n    _this2.invertedWheelEventHandler = function (ev) {\n      var scrollOffset = _this2.props.horizontal ? ev.target.scrollLeft : ev.target.scrollTop;\n      var scrollLength = _this2.props.horizontal ? ev.target.scrollWidth : ev.target.scrollHeight;\n      var clientLength = _this2.props.horizontal ? ev.target.clientWidth : ev.target.clientHeight;\n      var isEventTargetScrollable = scrollLength > clientLength;\n      var delta = _this2.props.horizontal ? ev.deltaX || ev.wheelDeltaX : ev.deltaY || ev.wheelDeltaY;\n      var leftoverDelta = delta;\n      if (isEventTargetScrollable) {\n        leftoverDelta = delta < 0 ? Math.min(delta + scrollOffset, 0) : Math.max(delta - (scrollLength - clientLength - scrollOffset), 0);\n      }\n      var targetDelta = delta - leftoverDelta;\n      if (_this2.props.inverted && _this2._scrollRef && _this2._scrollRef.getScrollableNode) {\n        var node = _this2._scrollRef.getScrollableNode();\n        if (_this2.props.horizontal) {\n          ev.target.scrollLeft += targetDelta;\n          var nextScrollLeft = node.scrollLeft - leftoverDelta;\n          node.scrollLeft = !_this2.props.getItemLayout ? Math.min(nextScrollLeft, _this2._totalCellLength) : nextScrollLeft;\n        } else {\n          ev.target.scrollTop += targetDelta;\n          var nextScrollTop = node.scrollTop - leftoverDelta;\n          node.scrollTop = !_this2.props.getItemLayout ? Math.min(nextScrollTop, _this2._totalCellLength) : nextScrollTop;\n        }\n        ev.preventDefault();\n      }\n    };\n    return _this2;\n  }\n  (0, _createClass2[\"default\"])(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n      if (veryLast < 0) {\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(veryLast, this.props);\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n      var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n      (0, _invariant[\"default\"])(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n      (0, _invariant[\"default\"])(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n      (0, _invariant[\"default\"])(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        (0, _invariant[\"default\"])(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n      var offset = Math.max(0, this._getOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      var item = params.item;\n      var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n      var itemCount = getItemCount(data);\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, params), {}, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      var animated = params.animated,\n        offset = params.offset;\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.recordInteraction();\n      });\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._scrollRef == null) {\n        return;\n      }\n      this._scrollRef.flashScrollIndicators();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      var _this$context;\n      return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }, {\n    key: \"_checkProps\",\n    value: function _checkProps(props) {\n      var onScroll = props.onScroll,\n        windowSize = props.windowSize,\n        getItemCount = props.getItemCount,\n        data = props.data,\n        initialScrollIndex = props.initialScrollIndex;\n      (0, _invariant[\"default\"])(!onScroll || !onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n      (0, _invariant[\"default\"])(windowSizeOrDefault(windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n      (0, _invariant[\"default\"])(getItemCount, 'VirtualizedList: The \"getItemCount\" prop must be provided');\n      var itemCount = getItemCount(data);\n      if (initialScrollIndex != null && !this._hasTriggeredInitialScrollToIndex && (initialScrollIndex < 0 || itemCount > 0 && initialScrollIndex >= itemCount) && !this._hasWarned.initialScrollIndex) {\n        console.warn(\"initialScrollIndex \\\"\" + initialScrollIndex + \"\\\" is not valid (list has \" + itemCount + \" items)\");\n        this._hasWarned.initialScrollIndex = true;\n      }\n      if (__DEV__ && !this._hasWarned.flexWrap) {\n        var flatStyles = _StyleSheet[\"default\"].flatten(this.props.contentContainerStyle);\n        if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n          console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n          this._hasWarned.flexWrap = true;\n        }\n      }\n    }\n  }, {\n    key: \"_adjustCellsAroundViewport\",\n    value: function _adjustCellsAroundViewport(props, cellsAroundViewport) {\n      var data = props.data,\n        getItemCount = props.getItemCount;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(props.onEndReachedThreshold);\n      var _this$_scrollMetrics = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics.contentLength,\n        offset = _this$_scrollMetrics.offset,\n        visibleLength = _this$_scrollMetrics.visibleLength;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (visibleLength <= 0 || contentLength <= 0) {\n        return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n      }\n      var newCellsAroundViewport;\n      if (props.disableVirtualization) {\n        var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch) : 0;\n        newCellsAroundViewport = {\n          first: 0,\n          last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)\n        };\n      } else {\n        if (props.initialScrollIndex && !this._scrollMetrics.offset && Math.abs(distanceFromEnd) >= Number.EPSILON) {\n          return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n        }\n        newCellsAroundViewport = (0, _VirtualizeUtils.computeWindowedRenderLimits)(props, maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch), windowSizeOrDefault(props.windowSize), cellsAroundViewport, this.__getFrameMetricsApprox, this._scrollMetrics);\n        (0, _invariant[\"default\"])(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');\n      }\n      if (this._nestedChildLists.size() > 0) {\n        var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);\n        newCellsAroundViewport.last = childIdx !== null && childIdx !== void 0 ? childIdx : newCellsAroundViewport.last;\n      }\n      return newCellsAroundViewport;\n    }\n  }, {\n    key: \"_findFirstChildWithMore\",\n    value: function _findFirstChildWithMore(first, last) {\n      for (var ii = first; ii <= last; ii++) {\n        var cellKeyForIndex = this._indicesToKeys.get(ii);\n        if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, function (childList) {\n          return childList.hasMore();\n        })) {\n          return ii;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.registerAsNestedChild({\n          ref: this,\n          cellKey: this.context.cellKey\n        });\n      }\n      this.setupWebWheelHandler();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.unregisterAsNestedChild({\n          ref: this\n        });\n      }\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n      this._fillRateHelper.deactivateAndFlush();\n      this.teardownWebWheelHandler();\n    }\n  }, {\n    key: \"setupWebWheelHandler\",\n    value: function setupWebWheelHandler() {\n      var _this3 = this;\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n      } else {\n        setTimeout(function () {\n          return _this3.setupWebWheelHandler();\n        }, 50);\n        return;\n      }\n    }\n  }, {\n    key: \"teardownWebWheelHandler\",\n    value: function teardownWebWheelHandler() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n      }\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this = this;\n      var _this$props4 = this.props,\n        CellRendererComponent = _this$props4.CellRendererComponent,\n        ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n        ListHeaderComponent = _this$props4.ListHeaderComponent,\n        ListItemComponent = _this$props4.ListItemComponent,\n        data = _this$props4.data,\n        debug = _this$props4.debug,\n        getItem = _this$props4.getItem,\n        getItemCount = _this$props4.getItemCount,\n        getItemLayout = _this$props4.getItemLayout,\n        horizontal = _this$props4.horizontal,\n        renderItem = _this$props4.renderItem;\n      var stickyOffset = ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n      var _loop = function _loop() {\n        var item = getItem(data, ii);\n        var key = _this._keyExtractor(item, ii, _this.props);\n        _this._indicesToKeys.set(ii, key);\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n        var shouldListenForLayout = getItemLayout == null || debug || _this._fillRateHelper.enabled();\n        cells.push(React.createElement(_VirtualizedListCellRenderer[\"default\"], (0, _extends2[\"default\"])({\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          ListItemComponent: ListItemComponent,\n          cellKey: key,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          key: key,\n          prevCellKey: prevCellKey,\n          onUpdateSeparators: _this._onUpdateSeparators,\n          onCellFocusCapture: function onCellFocusCapture(e) {\n            return _this._onCellFocusCapture(key);\n          },\n          onUnmount: _this._onCellUnmount,\n          ref: function ref(_ref) {\n            _this._cellRefs[key] = _ref;\n          },\n          renderItem: renderItem\n        }, shouldListenForLayout && {\n          onCellLayout: _this._onCellLayout\n        })));\n        prevCellKey = key;\n      };\n      for (var ii = first; ii <= last; ii++) {\n        _loop();\n      }\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context;\n      return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n    }\n  }, {\n    key: \"_keyExtractor\",\n    value: function _keyExtractor(item, index, props) {\n      if (props.keyExtractor != null) {\n        return props.keyExtractor(item, index);\n      }\n      var key = (0, _VirtualizeUtils.keyExtractor)(item, index);\n      if (key === String(index)) {\n        _usedIndexForKey = true;\n        if (item.type && item.type.displayName) {\n          _keylessItemComponentName = item.type.displayName;\n        }\n      }\n      return key;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      this._checkProps(this.props);\n      var _this$props5 = this.props,\n        ListEmptyComponent = _this$props5.ListEmptyComponent,\n        ListFooterComponent = _this$props5.ListFooterComponent,\n        ListHeaderComponent = _this$props5.ListHeaderComponent;\n      var _this$props6 = this.props,\n        data = _this$props6.data,\n        horizontal = _this$props6.horizontal;\n      var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n        var _element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, null);\n        cells.push(React.createElement(_VirtualizedListContext.VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-header',\n          key: \"$header\"\n        }, React.createElement(_View[\"default\"], {\n          onLayout: this._onLayoutHeader,\n          style: [inversionStyle, this.props.ListHeaderComponentStyle]\n        }, _element)));\n      }\n      var itemCount = this.props.getItemCount(data);\n      if (itemCount === 0 && ListEmptyComponent) {\n        var _element2 = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, null);\n        cells.push(React.createElement(_VirtualizedListContext.VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-empty',\n          key: \"$empty\"\n        }, React.cloneElement(_element2, {\n          onLayout: function onLayout(event) {\n            _this4._onLayoutEmpty(event);\n            if (_element2.props.onLayout) {\n              _element2.props.onLayout(event);\n            }\n          },\n          style: [inversionStyle, _element2.props.style]\n        })));\n      }\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = '';\n        var spacerKey = this._getSpacerKey(!horizontal);\n        var renderRegions = this.state.renderMask.enumerateRegions();\n        var lastSpacer = findLastWhere(renderRegions, function (r) {\n          return r.isSpacer;\n        });\n        for (var _iterator = (0, _createForOfIteratorHelperLoose2[\"default\"])(renderRegions), _step; !(_step = _iterator()).done;) {\n          var section = _step.value;\n          if (section.isSpacer) {\n            if (this.props.disableVirtualization) {\n              continue;\n            }\n            var isLastSpacer = section === lastSpacer;\n            var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n            var last = constrainToMeasured ? (0, _clamp[\"default\"])(section.first - 1, section.last, this._highestMeasuredFrameIndex) : section.last;\n            var firstMetrics = this.__getFrameMetricsApprox(section.first, this.props);\n            var lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n            var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n            cells.push(React.createElement(_View[\"default\"], {\n              key: \"$spacer-\" + section.first,\n              style: (0, _defineProperty2[\"default\"])({}, spacerKey, spacerSize)\n            }));\n          } else {\n            this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);\n          }\n        }\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n      }\n      if (ListFooterComponent) {\n        var _element3 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, null);\n        cells.push(React.createElement(_VirtualizedListContext.VirtualizedListCellContextProvider, {\n          cellKey: this._getFooterCellKey(),\n          key: \"$footer\"\n        }, React.createElement(_View[\"default\"], {\n          onLayout: this._onLayoutFooter,\n          style: [inversionStyle, this.props.ListFooterComponentStyle]\n        }, _element3)));\n      }\n      var scrollProps = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, this.props), {}, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollBegin: this._onMomentumScrollBegin,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices,\n        style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n      });\n      this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n      var innerRet = React.createElement(_VirtualizedListContext.VirtualizedListContextProvider, {\n        value: {\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild\n        }\n      }, React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n        ref: this._captureScrollRef\n      }, cells));\n      var ret = innerRet;\n      if (this.props.debug) {\n        return React.createElement(_View[\"default\"], {\n          style: styles.debug\n        }, ret, this._renderDebugOverlay());\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props7 = this.props,\n        data = _this$props7.data,\n        extraData = _this$props7.extraData;\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n      var hiPriInProgress = this._hiPriInProgress;\n      this._scheduleCellsToRenderUpdate();\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellFocusCapture\",\n    value: function _onCellFocusCapture(cellKey) {\n      this._lastFocusedCellKey = cellKey;\n      this._updateCellsToRender();\n    }\n  }, {\n    key: \"_triggerRemeasureForChildListsInCell\",\n    value: function _triggerRemeasureForChildListsInCell(cellKey) {\n      this._nestedChildLists.forEachInCell(cellKey, function (childList) {\n        childList.measureLayoutRelativeToContainingList();\n      });\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this5 = this;\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n        this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n          _this5._offsetFromParentVirtualizedList = _this5._selectOffset({\n            x: x,\n            y: y\n          });\n          _this5._scrollMetrics.contentLength = _this5._selectLength({\n            width: width,\n            height: height\n          });\n          var scrollMetrics = _this5._convertParentScrollMetrics(_this5.context.getScrollMetrics());\n          var metricsChanged = _this5._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || _this5._scrollMetrics.offset !== scrollMetrics.offset;\n          if (metricsChanged) {\n            _this5._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            _this5._scrollMetrics.offset = scrollMetrics.offset;\n            _this5._nestedChildLists.forEach(function (childList) {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n        });\n      } catch (error) {\n        console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n      }\n    }\n  }, {\n    key: \"_getFooterCellKey\",\n    value: function _getFooterCellKey() {\n      return this._getCellKey() + '-footer';\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this.__getFrameMetricsApprox(ii, this.props);\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n      var windowTop = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;\n      var frameLast = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.last, this.props);\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return React.createElement(_View[\"default\"], {\n        style: [styles.debugOverlayBase, styles.debugOverlay]\n      }, framesInLayout.map(function (f, ii) {\n        return React.createElement(_View[\"default\"], {\n          key: 'f' + ii,\n          style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n            top: f.offset * normalize,\n            height: f.length * normalize\n          }]\n        });\n      }), React.createElement(_View[\"default\"], {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n          top: windowTop * normalize,\n          height: windowLen * normalize\n        }]\n      }), React.createElement(_View[\"default\"], {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n          top: visTop * normalize,\n          height: visLen * normalize\n        }]\n      }));\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEdgeReached\",\n    value: function _maybeCallOnEdgeReached() {\n      var _this$props8 = this.props,\n        data = _this$props8.data,\n        getItemCount = _this$props8.getItemCount,\n        onStartReached = _this$props8.onStartReached,\n        onStartReachedThreshold = _this$props8.onStartReachedThreshold,\n        onEndReached = _this$props8.onEndReached,\n        onEndReachedThreshold = _this$props8.onEndReachedThreshold,\n        initialScrollIndex = _this$props8.initialScrollIndex;\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n      var distanceFromStart = offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n        distanceFromStart = 0;\n      }\n      if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n        distanceFromEnd = 0;\n      }\n      var DEFAULT_THRESHOLD_PX = 2;\n      var startThreshold = onStartReachedThreshold != null ? onStartReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n      var endThreshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n      var isWithinStartThreshold = distanceFromStart <= startThreshold;\n      var isWithinEndThreshold = distanceFromEnd <= endThreshold;\n      if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && isWithinEndThreshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      } else if (onStartReached != null && this.state.cellsAroundViewport.first === 0 && isWithinStartThreshold && this._scrollMetrics.contentLength !== this._sentStartForContentLength) {\n        if (!initialScrollIndex || this._scrollMetrics.timestamp !== 0) {\n          this._sentStartForContentLength = this._scrollMetrics.contentLength;\n          onStartReached({\n            distanceFromStart: distanceFromStart\n          });\n        }\n      } else {\n        this._sentStartForContentLength = isWithinStartThreshold ? this._sentStartForContentLength : 0;\n        this._sentEndForContentLength = isWithinEndThreshold ? this._sentEndForContentLength : 0;\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state$cellsArou = this.state.cellsAroundViewport,\n        first = _this$state$cellsArou.first,\n        last = _this$state$cellsArou.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var onStartReachedThreshold = onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold);\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n      if (first > 0) {\n        var distTop = offset - this.__getFrameMetricsApprox(first, this.props).offset;\n        hiPri = distTop < 0 || velocity < -2 && distTop < getScrollingThreshold(onStartReachedThreshold, visibleLength);\n      }\n      if (!hiPri && last >= 0 && last < itemCount - 1) {\n        var distBottom = this.__getFrameMetricsApprox(last, this.props).offset - (offset + visibleLength);\n        hiPri = distBottom < 0 || velocity > 2 && distBottom < getScrollingThreshold(onEndReachedThreshold, visibleLength);\n      }\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n        this._updateCellsToRender();\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(props, cellsAroundViewport) {\n      var _this6 = this;\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(props, _this6._scrollMetrics.offset, _this6._scrollMetrics.visibleLength, _this6._getFrameMetrics, _this6._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);\n      });\n    }\n  }], [{\n    key: \"_createRenderMask\",\n    value: function _createRenderMask(props, cellsAroundViewport, additionalRegions) {\n      var itemCount = props.getItemCount(props.data);\n      (0, _invariant[\"default\"])(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, \"Invalid cells around viewport \\\"[\" + cellsAroundViewport.first + \", \" + cellsAroundViewport.last + \"]\\\" was passed to VirtualizedList._createRenderMask\");\n      var renderMask = new _CellRenderMask.CellRenderMask(itemCount);\n      if (itemCount > 0) {\n        var allRegions = [cellsAroundViewport].concat((0, _toConsumableArray2[\"default\"])(additionalRegions !== null && additionalRegions !== void 0 ? additionalRegions : []));\n        for (var _i2 = 0, _allRegions = allRegions; _i2 < _allRegions.length; _i2++) {\n          var region = _allRegions[_i2];\n          renderMask.addCells(region);\n        }\n        if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n          var initialRegion = VirtualizedList._initialRenderRegion(props);\n          renderMask.addCells(initialRegion);\n        }\n        var stickyIndicesSet = new Set(props.stickyHeaderIndices);\n        VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);\n      }\n      return renderMask;\n    }\n  }, {\n    key: \"_initialRenderRegion\",\n    value: function _initialRenderRegion(props) {\n      var _props$initialScrollI;\n      var itemCount = props.getItemCount(props.data);\n      var firstCellIndex = Math.max(0, Math.min(itemCount - 1, Math.floor((_props$initialScrollI = props.initialScrollIndex) !== null && _props$initialScrollI !== void 0 ? _props$initialScrollI : 0)));\n      var lastCellIndex = Math.min(itemCount, firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender)) - 1;\n      return {\n        first: firstCellIndex,\n        last: lastCellIndex\n      };\n    }\n  }, {\n    key: \"_ensureClosestStickyHeader\",\n    value: function _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {\n      var stickyOffset = props.ListHeaderComponent ? 1 : 0;\n      for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n        if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n          renderMask.addCells({\n            first: itemIdx,\n            last: itemIdx\n          });\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var itemCount = newProps.getItemCount(newProps.data);\n      if (itemCount === prevState.renderMask.numCells()) {\n        return prevState;\n      }\n      var constrainedCells = VirtualizedList._constrainToItemCount(prevState.cellsAroundViewport, newProps);\n      return {\n        cellsAroundViewport: constrainedCells,\n        renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells)\n      };\n    }\n  }, {\n    key: \"_constrainToItemCount\",\n    value: function _constrainToItemCount(cells, props) {\n      var itemCount = props.getItemCount(props.data);\n      var last = Math.min(itemCount - 1, cells.last);\n      var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch);\n      return {\n        first: (0, _clamp[\"default\"])(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n        last: last\n      };\n    }\n  }]);\n  return VirtualizedList;\n}(_StateSafePureComponent[\"default\"]);\nVirtualizedList.contextType = _VirtualizedListContext.VirtualizedListContext;\nvar styles = _StyleSheet[\"default\"].create({\n  verticallyInverted: {\n    transform: 'scaleY(-1)'\n  },\n  horizontallyInverted: {\n    transform: 'scaleX(-1)'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nvar _default = VirtualizedList;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_createForOfIteratorHelperLoose2","_interopRequireDefault","require","_extends2","_objectSpread2","_RefreshControl","_ScrollView","_View","_StyleSheet","_findNodeHandle","_Batchinator","_clamp","_infoLog","_CellRenderMask","_ChildListCollection","_FillRateHelper","_StateSafePureComponent","_ViewabilityHelper","_VirtualizedListCellRenderer","_VirtualizedListContext","_VirtualizeUtils","_invariant","_nullthrows","React","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","__DEV__","process","env","NODE_ENV","ON_EDGE_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onStartReachedThresholdOrDefault","onStartReachedThreshold","onEndReachedThresholdOrDefault","onEndReachedThreshold","getScrollingThreshold","threshold","visibleLength","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","findLastWhere","arr","predicate","i","length","VirtualizedList","_StateSafePureCompone","_inherits2","_super","_props","_this2","_classCallCheck2","_this$props$updateCel","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_assertThisInitialized2","_registerAsNestedChild","childList","_nestedChildLists","add","ref","cellKey","_hasInteracted","recordInteraction","_unregisterAsNestedChild","remove","_onUpdateSeparators","keys","newProps","forEach","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_averageCellLength","_frames","_footerLength","_hasTriggeredInitialScrollToIndex","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","Map","_lastFocusedCellKey","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","zoomScale","_scrollRef","_sentStartForContentLength","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","props","onRefresh","createElement","_props$refreshing","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellLayout","index","layout","nativeEvent","next","_selectOffset","_selectLength","inLayout","curr","Math","max","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_updateViewableItems","state","cellsAroundViewport","_onCellUnmount","_onLayout","measureLayoutRelativeToContainingList","onLayout","_maybeCallOnEdgeReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","getItemCount","data","scrollToIndex","animated","scrollToEnd","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_this$_convertParentS","perf","prevDt","_fillRateHelper","activate","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","setState","_adjustCellsAroundViewport","renderMask","_createRenderMask","_getNonViewportRenderRegions","first","last","equals","_createViewToken","isViewable","getItem","item","_keyExtractor","_getOffsetApprox","Number","isInteger","__getFrameMetricsApprox","frameMetrics","floor","remainder","frame","_getFrameMetrics","getItemLayout","lastFocusedCellRenderer","focusedCellIndex","itemCount","heightOfCellsBeforeFocused","heightOfCellsAfterFocused","_i","_checkProps","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","_this$props3","push","initialRenderRegion","_initialRenderRegion","invertedWheelEventHandler","ev","scrollOffset","target","scrollLeft","scrollTop","scrollLength","scrollWidth","scrollHeight","clientLength","clientWidth","clientHeight","isEventTargetScrollable","delta","deltaX","wheelDeltaX","deltaY","wheelDeltaY","leftoverDelta","min","targetDelta","inverted","getScrollableNode","node","nextScrollLeft","nextScrollTop","preventDefault","_createClass2","value","params","veryLast","scrollTo","console","warn","x","y","_this$props","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","scrollToItem","_this$props2","_index","scrollToOffset","t","flashScrollIndicators","getScrollResponder","getScrollRef","_getCellKey","_this$context","hasMore","__isNative","flexWrap","flatStyles","flatten","contentContainerStyle","_this$_scrollMetrics","distanceFromEnd","_constrainToItemCount","newCellsAroundViewport","disableVirtualization","renderAhead","abs","EPSILON","computeWindowedRenderLimits","size","childIdx","_findFirstChildWithMore","ii","cellKeyForIndex","anyInCell","componentDidMount","registerAsNestedChild","setupWebWheelHandler","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","teardownWebWheelHandler","_this3","addEventListener","setTimeout","removeEventListener","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this","_this$props4","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","prevCellKey","_loop","shouldListenForLayout","enabled","undefined","onUpdateSeparators","onCellFocusCapture","_onCellFocusCapture","onUnmount","_ref","onCellLayout","nestedContext","keyExtractor","String","type","displayName","render","_this4","_this$props5","ListEmptyComponent","ListFooterComponent","_this$props6","styles","horizontallyInverted","verticallyInverted","Set","_element","isValidElement","VirtualizedListCellContextProvider","style","ListHeaderComponentStyle","_element2","cloneElement","event","spacerKey","renderRegions","enumerateRegions","lastSpacer","r","isSpacer","_iterator","_step","done","section","isLastSpacer","constrainToMeasured","firstMetrics","lastMetrics","spacerSize","_defineProperty2","_element3","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","VirtualizedListContextProvider","getScrollMetrics","renderScrollComponent","ret","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props7","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","forEachInCell","_this5","measureLayout","scrollMetrics","metricsChanged","error","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props8","onStartReached","onEndReached","_this$_scrollMetrics2","distanceFromStart","DEFAULT_THRESHOLD_PX","startThreshold","endThreshold","isWithinStartThreshold","isWithinEndThreshold","_this$state$cellsArou","_this$_scrollMetrics3","hiPri","distTop","distBottom","schedule","_this6","onUpdate","additionalRegions","CellRenderMask","allRegions","concat","_toConsumableArray2","_i2","_allRegions","region","addCells","initialRegion","stickyIndicesSet","_ensureClosestStickyHeader","_props$initialScrollI","firstCellIndex","lastCellIndex","cellIdx","itemIdx","getDerivedStateFromProps","prevState","numCells","constrainedCells","contextType","VirtualizedListContext","create","transform","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","_default","exports"],"sources":["C:/Users/Anirudh/New folder/amplify/frontend/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js"],"sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\r\nimport _extends from \"@babel/runtime/helpers/extends\";\r\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\r\n/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\r\n\r\nimport RefreshControl from '../../../exports/RefreshControl';\r\nimport ScrollView from '../../../exports/ScrollView';\r\nimport View from '../../../exports/View';\r\nimport StyleSheet from '../../../exports/StyleSheet';\r\nimport findNodeHandle from '../../../exports/findNodeHandle';\r\nimport Batchinator from '../Batchinator';\r\nimport clamp from '../Utilities/clamp';\r\nimport infoLog from '../infoLog';\r\nimport { CellRenderMask } from './CellRenderMask';\r\nimport ChildListCollection from './ChildListCollection';\r\nimport FillRateHelper from '../FillRateHelper';\r\nimport StateSafePureComponent from './StateSafePureComponent';\r\nimport ViewabilityHelper from '../ViewabilityHelper';\r\nimport CellRenderer from './VirtualizedListCellRenderer';\r\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\r\nimport { computeWindowedRenderLimits, keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport nullthrows from 'nullthrows';\r\nimport * as React from 'react';\r\nvar __DEV__ = process.env.NODE_ENV !== 'production';\r\nvar ON_EDGE_REACHED_EPSILON = 0.001;\r\nvar _usedIndexForKey = false;\r\nvar _keylessItemComponentName = '';\r\n/**\r\n * Default Props Helper Functions\r\n * Use the following helper functions for default values\r\n */\r\n\r\n// horizontalOrDefault(this.props.horizontal)\r\nfunction horizontalOrDefault(horizontal) {\r\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\r\n}\r\n\r\n// initialNumToRenderOrDefault(this.props.initialNumToRender)\r\nfunction initialNumToRenderOrDefault(initialNumToRender) {\r\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\r\n}\r\n\r\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\r\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\r\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\r\n}\r\n\r\n// onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold)\r\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold) {\r\n  return onStartReachedThreshold !== null && onStartReachedThreshold !== void 0 ? onStartReachedThreshold : 2;\r\n}\r\n\r\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\r\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\r\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\r\n}\r\n\r\n// getScrollingThreshold(visibleLength, onEndReachedThreshold)\r\nfunction getScrollingThreshold(threshold, visibleLength) {\r\n  return threshold * visibleLength / 2;\r\n}\r\n\r\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\r\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\r\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\r\n}\r\n\r\n// windowSizeOrDefault(this.props.windowSize)\r\nfunction windowSizeOrDefault(windowSize) {\r\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\r\n}\r\nfunction findLastWhere(arr, predicate) {\r\n  for (var i = arr.length - 1; i >= 0; i--) {\r\n    if (predicate(arr[i])) {\r\n      return arr[i];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\r\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\r\n * documented. In general, this should only really be used if you need more flexibility than\r\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\r\n *\r\n * Virtualization massively improves memory consumption and performance of large lists by\r\n * maintaining a finite render window of active items and replacing all items outside of the render\r\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\r\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\r\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\r\n *\r\n * Some caveats:\r\n *\r\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\r\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\r\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\r\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\r\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\r\n *   changes. This includes the `data` prop and parent component state.\r\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\r\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\r\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\r\n *   and we are working on improving it behind the scenes.\r\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\r\n *   Alternatively, you can provide a custom `keyExtractor` prop.\r\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\r\n *\r\n */\r\nclass VirtualizedList extends StateSafePureComponent {\r\n  // scrollToEnd may be janky without getItemLayout prop\r\n  scrollToEnd(params) {\r\n    var animated = params ? params.animated : true;\r\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\r\n    if (veryLast < 0) {\r\n      return;\r\n    }\r\n    var frame = this.__getFrameMetricsApprox(veryLast, this.props);\r\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\r\n    if (this._scrollRef == null) {\r\n      return;\r\n    }\r\n    if (this._scrollRef.scrollTo == null) {\r\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\r\n      return;\r\n    }\r\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\r\n      x: offset,\r\n      animated\r\n    } : {\r\n      y: offset,\r\n      animated\r\n    });\r\n  }\r\n\r\n  // scrollToIndex may be janky without getItemLayout prop\r\n  scrollToIndex(params) {\r\n    var _this$props = this.props,\r\n      data = _this$props.data,\r\n      horizontal = _this$props.horizontal,\r\n      getItemCount = _this$props.getItemCount,\r\n      getItemLayout = _this$props.getItemLayout,\r\n      onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\r\n    var animated = params.animated,\r\n      index = params.index,\r\n      viewOffset = params.viewOffset,\r\n      viewPosition = params.viewPosition;\r\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\r\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\r\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\r\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\r\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\r\n      onScrollToIndexFailed({\r\n        averageItemLength: this._averageCellLength,\r\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\r\n        index\r\n      });\r\n      return;\r\n    }\r\n    var frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\r\n    var offset = Math.max(0, this._getOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\r\n    if (this._scrollRef == null) {\r\n      return;\r\n    }\r\n    if (this._scrollRef.scrollTo == null) {\r\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\r\n      return;\r\n    }\r\n    this._scrollRef.scrollTo(horizontal ? {\r\n      x: offset,\r\n      animated\r\n    } : {\r\n      y: offset,\r\n      animated\r\n    });\r\n  }\r\n\r\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\r\n  // use scrollToIndex instead if possible.\r\n  scrollToItem(params) {\r\n    var item = params.item;\r\n    var _this$props2 = this.props,\r\n      data = _this$props2.data,\r\n      getItem = _this$props2.getItem,\r\n      getItemCount = _this$props2.getItemCount;\r\n    var itemCount = getItemCount(data);\r\n    for (var _index = 0; _index < itemCount; _index++) {\r\n      if (getItem(data, _index) === item) {\r\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\r\n          index: _index\r\n        }));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scroll to a specific content pixel offset in the list.\r\n   *\r\n   * Param `offset` expects the offset to scroll to.\r\n   * In case of `horizontal` is true, the offset is the x-value,\r\n   * in any other case the offset is the y-value.\r\n   *\r\n   * Param `animated` (`true` by default) defines whether the list\r\n   * should do an animation while scrolling.\r\n   */\r\n  scrollToOffset(params) {\r\n    var animated = params.animated,\r\n      offset = params.offset;\r\n    if (this._scrollRef == null) {\r\n      return;\r\n    }\r\n    if (this._scrollRef.scrollTo == null) {\r\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\r\n      return;\r\n    }\r\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\r\n      x: offset,\r\n      animated\r\n    } : {\r\n      y: offset,\r\n      animated\r\n    });\r\n  }\r\n  recordInteraction() {\r\n    this._nestedChildLists.forEach(childList => {\r\n      childList.recordInteraction();\r\n    });\r\n    this._viewabilityTuples.forEach(t => {\r\n      t.viewabilityHelper.recordInteraction();\r\n    });\r\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\r\n  }\r\n  flashScrollIndicators() {\r\n    if (this._scrollRef == null) {\r\n      return;\r\n    }\r\n    this._scrollRef.flashScrollIndicators();\r\n  }\r\n\r\n  /**\r\n   * Provides a handle to the underlying scroll responder.\r\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\r\n   * need to check that it responds to `getScrollResponder` before calling it.\r\n   */\r\n  getScrollResponder() {\r\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\r\n      return this._scrollRef.getScrollResponder();\r\n    }\r\n  }\r\n  getScrollableNode() {\r\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\r\n      return this._scrollRef.getScrollableNode();\r\n    } else {\r\n      return this._scrollRef;\r\n    }\r\n  }\r\n  getScrollRef() {\r\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\r\n      return this._scrollRef.getScrollRef();\r\n    } else {\r\n      return this._scrollRef;\r\n    }\r\n  }\r\n  _getCellKey() {\r\n    var _this$context;\r\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\r\n  }\r\n\r\n  // $FlowFixMe[missing-local-annot]\r\n\r\n  hasMore() {\r\n    return this._hasMore;\r\n  }\r\n\r\n  // $FlowFixMe[missing-local-annot]\r\n\r\n  constructor(_props) {\r\n    var _this$props$updateCel;\r\n    super(_props);\r\n    this._getScrollMetrics = () => {\r\n      return this._scrollMetrics;\r\n    };\r\n    this._getOutermostParentListRef = () => {\r\n      if (this._isNestedWithSameOrientation()) {\r\n        return this.context.getOutermostParentListRef();\r\n      } else {\r\n        return this;\r\n      }\r\n    };\r\n    this._registerAsNestedChild = childList => {\r\n      this._nestedChildLists.add(childList.ref, childList.cellKey);\r\n      if (this._hasInteracted) {\r\n        childList.ref.recordInteraction();\r\n      }\r\n    };\r\n    this._unregisterAsNestedChild = childList => {\r\n      this._nestedChildLists.remove(childList.ref);\r\n    };\r\n    this._onUpdateSeparators = (keys, newProps) => {\r\n      keys.forEach(key => {\r\n        var ref = key != null && this._cellRefs[key];\r\n        ref && ref.updateSeparatorProps(newProps);\r\n      });\r\n    };\r\n    this._getSpacerKey = isVertical => isVertical ? 'height' : 'width';\r\n    this._averageCellLength = 0;\r\n    this._cellRefs = {};\r\n    this._frames = {};\r\n    this._footerLength = 0;\r\n    this._hasTriggeredInitialScrollToIndex = false;\r\n    this._hasInteracted = false;\r\n    this._hasMore = false;\r\n    this._hasWarned = {};\r\n    this._headerLength = 0;\r\n    this._hiPriInProgress = false;\r\n    this._highestMeasuredFrameIndex = 0;\r\n    this._indicesToKeys = new Map();\r\n    this._lastFocusedCellKey = null;\r\n    this._nestedChildLists = new ChildListCollection();\r\n    this._offsetFromParentVirtualizedList = 0;\r\n    this._prevParentOffset = 0;\r\n    this._scrollMetrics = {\r\n      contentLength: 0,\r\n      dOffset: 0,\r\n      dt: 10,\r\n      offset: 0,\r\n      timestamp: 0,\r\n      velocity: 0,\r\n      visibleLength: 0,\r\n      zoomScale: 1\r\n    };\r\n    this._scrollRef = null;\r\n    this._sentStartForContentLength = 0;\r\n    this._sentEndForContentLength = 0;\r\n    this._totalCellLength = 0;\r\n    this._totalCellsMeasured = 0;\r\n    this._viewabilityTuples = [];\r\n    this._captureScrollRef = ref => {\r\n      this._scrollRef = ref;\r\n    };\r\n    this._defaultRenderScrollComponent = props => {\r\n      var onRefresh = props.onRefresh;\r\n      if (this._isNestedWithSameOrientation()) {\r\n        // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\r\n        return /*#__PURE__*/React.createElement(View, props);\r\n      } else if (onRefresh) {\r\n        var _props$refreshing;\r\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\r\n        return (\r\n          /*#__PURE__*/\r\n          // $FlowFixMe[prop-missing] Invalid prop usage\r\n          // $FlowFixMe[incompatible-use]\r\n          React.createElement(ScrollView, _extends({}, props, {\r\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl\r\n            // $FlowFixMe[incompatible-type]\r\n            , {\r\n              refreshing: props.refreshing,\r\n              onRefresh: onRefresh,\r\n              progressViewOffset: props.progressViewOffset\r\n            }) : props.refreshControl\r\n          }))\r\n        );\r\n      } else {\r\n        // $FlowFixMe[prop-missing] Invalid prop usage\r\n        // $FlowFixMe[incompatible-use]\r\n        return /*#__PURE__*/React.createElement(ScrollView, props);\r\n      }\r\n    };\r\n    this._onCellLayout = (e, cellKey, index) => {\r\n      var layout = e.nativeEvent.layout;\r\n      var next = {\r\n        offset: this._selectOffset(layout),\r\n        length: this._selectLength(layout),\r\n        index,\r\n        inLayout: true\r\n      };\r\n      var curr = this._frames[cellKey];\r\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\r\n        this._totalCellLength += next.length - (curr ? curr.length : 0);\r\n        this._totalCellsMeasured += curr ? 0 : 1;\r\n        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\r\n        this._frames[cellKey] = next;\r\n        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\r\n        this._scheduleCellsToRenderUpdate();\r\n      } else {\r\n        this._frames[cellKey].inLayout = true;\r\n      }\r\n      this._triggerRemeasureForChildListsInCell(cellKey);\r\n      this._computeBlankness();\r\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\r\n    };\r\n    this._onCellUnmount = cellKey => {\r\n      delete this._cellRefs[cellKey];\r\n      var curr = this._frames[cellKey];\r\n      if (curr) {\r\n        this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\r\n          inLayout: false\r\n        });\r\n      }\r\n    };\r\n    this._onLayout = e => {\r\n      if (this._isNestedWithSameOrientation()) {\r\n        // Need to adjust our scroll metrics to be relative to our containing\r\n        // VirtualizedList before we can make claims about list item viewability\r\n        this.measureLayoutRelativeToContainingList();\r\n      } else {\r\n        this._scrollMetrics.visibleLength = this._selectLength(e.nativeEvent.layout);\r\n      }\r\n      this.props.onLayout && this.props.onLayout(e);\r\n      this._scheduleCellsToRenderUpdate();\r\n      this._maybeCallOnEdgeReached();\r\n    };\r\n    this._onLayoutEmpty = e => {\r\n      this.props.onLayout && this.props.onLayout(e);\r\n    };\r\n    this._onLayoutFooter = e => {\r\n      this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\r\n      this._footerLength = this._selectLength(e.nativeEvent.layout);\r\n    };\r\n    this._onLayoutHeader = e => {\r\n      this._headerLength = this._selectLength(e.nativeEvent.layout);\r\n    };\r\n    this._onContentSizeChange = (width, height) => {\r\n      if (width > 0 && height > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasTriggeredInitialScrollToIndex) {\r\n        if (this.props.contentOffset == null) {\r\n          if (this.props.initialScrollIndex < this.props.getItemCount(this.props.data)) {\r\n            this.scrollToIndex({\r\n              animated: false,\r\n              index: nullthrows(this.props.initialScrollIndex)\r\n            });\r\n          } else {\r\n            this.scrollToEnd({\r\n              animated: false\r\n            });\r\n          }\r\n        }\r\n        this._hasTriggeredInitialScrollToIndex = true;\r\n      }\r\n      if (this.props.onContentSizeChange) {\r\n        this.props.onContentSizeChange(width, height);\r\n      }\r\n      this._scrollMetrics.contentLength = this._selectLength({\r\n        height,\r\n        width\r\n      });\r\n      this._scheduleCellsToRenderUpdate();\r\n      this._maybeCallOnEdgeReached();\r\n    };\r\n    this._convertParentScrollMetrics = metrics => {\r\n      // Offset of the top of the nested list relative to the top of its parent's viewport\r\n      var offset = metrics.offset - this._offsetFromParentVirtualizedList;\r\n      // Child's visible length is the same as its parent's\r\n      var visibleLength = metrics.visibleLength;\r\n      var dOffset = offset - this._scrollMetrics.offset;\r\n      var contentLength = this._scrollMetrics.contentLength;\r\n      return {\r\n        visibleLength,\r\n        contentLength,\r\n        offset,\r\n        dOffset\r\n      };\r\n    };\r\n    this._onScroll = e => {\r\n      this._nestedChildLists.forEach(childList => {\r\n        childList._onScroll(e);\r\n      });\r\n      if (this.props.onScroll) {\r\n        this.props.onScroll(e);\r\n      }\r\n      var timestamp = e.timeStamp;\r\n      var visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\r\n      var contentLength = this._selectLength(e.nativeEvent.contentSize);\r\n      var offset = this._selectOffset(e.nativeEvent.contentOffset);\r\n      var dOffset = offset - this._scrollMetrics.offset;\r\n      if (this._isNestedWithSameOrientation()) {\r\n        if (this._scrollMetrics.contentLength === 0) {\r\n          // Ignore scroll events until onLayout has been called and we\r\n          // know our offset from our offset from our parent\r\n          return;\r\n        }\r\n        var _this$_convertParentS = this._convertParentScrollMetrics({\r\n          visibleLength,\r\n          offset\r\n        });\r\n        visibleLength = _this$_convertParentS.visibleLength;\r\n        contentLength = _this$_convertParentS.contentLength;\r\n        offset = _this$_convertParentS.offset;\r\n        dOffset = _this$_convertParentS.dOffset;\r\n      }\r\n      var dt = this._scrollMetrics.timestamp ? Math.max(1, timestamp - this._scrollMetrics.timestamp) : 1;\r\n      var velocity = dOffset / dt;\r\n      if (dt > 500 && this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !this._hasWarned.perf) {\r\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\r\n          dt,\r\n          prevDt: this._scrollMetrics.dt,\r\n          contentLength\r\n        });\r\n        this._hasWarned.perf = true;\r\n      }\r\n\r\n      // For invalid negative values (w/ RTL), set this to 1.\r\n      var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\r\n      this._scrollMetrics = {\r\n        contentLength,\r\n        dt,\r\n        dOffset,\r\n        offset,\r\n        timestamp,\r\n        velocity,\r\n        visibleLength,\r\n        zoomScale\r\n      };\r\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\r\n      if (!this.props) {\r\n        return;\r\n      }\r\n      this._maybeCallOnEdgeReached();\r\n      if (velocity !== 0) {\r\n        this._fillRateHelper.activate();\r\n      }\r\n      this._computeBlankness();\r\n      this._scheduleCellsToRenderUpdate();\r\n    };\r\n    this._onScrollBeginDrag = e => {\r\n      this._nestedChildLists.forEach(childList => {\r\n        childList._onScrollBeginDrag(e);\r\n      });\r\n      this._viewabilityTuples.forEach(tuple => {\r\n        tuple.viewabilityHelper.recordInteraction();\r\n      });\r\n      this._hasInteracted = true;\r\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\r\n    };\r\n    this._onScrollEndDrag = e => {\r\n      this._nestedChildLists.forEach(childList => {\r\n        childList._onScrollEndDrag(e);\r\n      });\r\n      var velocity = e.nativeEvent.velocity;\r\n      if (velocity) {\r\n        this._scrollMetrics.velocity = this._selectOffset(velocity);\r\n      }\r\n      this._computeBlankness();\r\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\r\n    };\r\n    this._onMomentumScrollBegin = e => {\r\n      this._nestedChildLists.forEach(childList => {\r\n        childList._onMomentumScrollBegin(e);\r\n      });\r\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\r\n    };\r\n    this._onMomentumScrollEnd = e => {\r\n      this._nestedChildLists.forEach(childList => {\r\n        childList._onMomentumScrollEnd(e);\r\n      });\r\n      this._scrollMetrics.velocity = 0;\r\n      this._computeBlankness();\r\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\r\n    };\r\n    this._updateCellsToRender = () => {\r\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\r\n      this.setState((state, props) => {\r\n        var cellsAroundViewport = this._adjustCellsAroundViewport(props, state.cellsAroundViewport);\r\n        var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, this._getNonViewportRenderRegions(props));\r\n        if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {\r\n          return null;\r\n        }\r\n        return {\r\n          cellsAroundViewport,\r\n          renderMask\r\n        };\r\n      });\r\n    };\r\n    this._createViewToken = (index, isViewable, props\r\n    // $FlowFixMe[missing-local-annot]\r\n    ) => {\r\n      var data = props.data,\r\n        getItem = props.getItem;\r\n      var item = getItem(data, index);\r\n      return {\r\n        index,\r\n        item,\r\n        key: this._keyExtractor(item, index, props),\r\n        isViewable\r\n      };\r\n    };\r\n    this._getOffsetApprox = (index, props) => {\r\n      if (Number.isInteger(index)) {\r\n        return this.__getFrameMetricsApprox(index, props).offset;\r\n      } else {\r\n        var frameMetrics = this.__getFrameMetricsApprox(Math.floor(index), props);\r\n        var remainder = index - Math.floor(index);\r\n        return frameMetrics.offset + remainder * frameMetrics.length;\r\n      }\r\n    };\r\n    this.__getFrameMetricsApprox = (index, props) => {\r\n      var frame = this._getFrameMetrics(index, props);\r\n      if (frame && frame.index === index) {\r\n        // check for invalid frames due to row re-ordering\r\n        return frame;\r\n      } else {\r\n        var data = props.data,\r\n          getItemCount = props.getItemCount,\r\n          getItemLayout = props.getItemLayout;\r\n        invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\r\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\r\n        return {\r\n          length: this._averageCellLength,\r\n          offset: this._averageCellLength * index\r\n        };\r\n      }\r\n    };\r\n    this._getFrameMetrics = (index, props) => {\r\n      var data = props.data,\r\n        getItem = props.getItem,\r\n        getItemCount = props.getItemCount,\r\n        getItemLayout = props.getItemLayout;\r\n      invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\r\n      var item = getItem(data, index);\r\n      var frame = this._frames[this._keyExtractor(item, index, props)];\r\n      if (!frame || frame.index !== index) {\r\n        if (getItemLayout) {\r\n          /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\r\n           * suppresses an error found when Flow v0.63 was deployed. To see the error\r\n           * delete this comment and run Flow. */\r\n          return getItemLayout(data, index);\r\n        }\r\n      }\r\n      return frame;\r\n    };\r\n    this._getNonViewportRenderRegions = props => {\r\n      // Keep a viewport's worth of content around the last focused cell to allow\r\n      // random navigation around it without any blanking. E.g. tabbing from one\r\n      // focused item out of viewport to another.\r\n      if (!(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])) {\r\n        return [];\r\n      }\r\n      var lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\r\n      var focusedCellIndex = lastFocusedCellRenderer.props.index;\r\n      var itemCount = props.getItemCount(props.data);\r\n\r\n      // The last cell we rendered may be at a new index. Bail if we don't know\r\n      // where it is.\r\n      if (focusedCellIndex >= itemCount || this._keyExtractor(props.getItem(props.data, focusedCellIndex), focusedCellIndex, props) !== this._lastFocusedCellKey) {\r\n        return [];\r\n      }\r\n      var first = focusedCellIndex;\r\n      var heightOfCellsBeforeFocused = 0;\r\n      for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength; i--) {\r\n        first--;\r\n        heightOfCellsBeforeFocused += this.__getFrameMetricsApprox(i, props).length;\r\n      }\r\n      var last = focusedCellIndex;\r\n      var heightOfCellsAfterFocused = 0;\r\n      for (var _i = last + 1; _i < itemCount && heightOfCellsAfterFocused < this._scrollMetrics.visibleLength; _i++) {\r\n        last++;\r\n        heightOfCellsAfterFocused += this.__getFrameMetricsApprox(_i, props).length;\r\n      }\r\n      return [{\r\n        first,\r\n        last\r\n      }];\r\n    };\r\n    this._checkProps(_props);\r\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\r\n    this._updateCellsToRenderBatcher = new Batchinator(this._updateCellsToRender, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\r\n    if (this.props.viewabilityConfigCallbackPairs) {\r\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(pair => ({\r\n        viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\r\n        onViewableItemsChanged: pair.onViewableItemsChanged\r\n      }));\r\n    } else {\r\n      var _this$props3 = this.props,\r\n        onViewableItemsChanged = _this$props3.onViewableItemsChanged,\r\n        viewabilityConfig = _this$props3.viewabilityConfig;\r\n      if (onViewableItemsChanged) {\r\n        this._viewabilityTuples.push({\r\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\r\n          onViewableItemsChanged: onViewableItemsChanged\r\n        });\r\n      }\r\n    }\r\n    var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);\r\n    this.state = {\r\n      cellsAroundViewport: initialRenderRegion,\r\n      renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion)\r\n    };\r\n\r\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\r\n    // For issue https://github.com/necolas/react-native-web/issues/995\r\n    this.invertedWheelEventHandler = ev => {\r\n      var scrollOffset = this.props.horizontal ? ev.target.scrollLeft : ev.target.scrollTop;\r\n      var scrollLength = this.props.horizontal ? ev.target.scrollWidth : ev.target.scrollHeight;\r\n      var clientLength = this.props.horizontal ? ev.target.clientWidth : ev.target.clientHeight;\r\n      var isEventTargetScrollable = scrollLength > clientLength;\r\n      var delta = this.props.horizontal ? ev.deltaX || ev.wheelDeltaX : ev.deltaY || ev.wheelDeltaY;\r\n      var leftoverDelta = delta;\r\n      if (isEventTargetScrollable) {\r\n        leftoverDelta = delta < 0 ? Math.min(delta + scrollOffset, 0) : Math.max(delta - (scrollLength - clientLength - scrollOffset), 0);\r\n      }\r\n      var targetDelta = delta - leftoverDelta;\r\n      if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {\r\n        var node = this._scrollRef.getScrollableNode();\r\n        if (this.props.horizontal) {\r\n          ev.target.scrollLeft += targetDelta;\r\n          var nextScrollLeft = node.scrollLeft - leftoverDelta;\r\n          node.scrollLeft = !this.props.getItemLayout ? Math.min(nextScrollLeft, this._totalCellLength) : nextScrollLeft;\r\n        } else {\r\n          ev.target.scrollTop += targetDelta;\r\n          var nextScrollTop = node.scrollTop - leftoverDelta;\r\n          node.scrollTop = !this.props.getItemLayout ? Math.min(nextScrollTop, this._totalCellLength) : nextScrollTop;\r\n        }\r\n        ev.preventDefault();\r\n      }\r\n    };\r\n  }\r\n  _checkProps(props) {\r\n    var onScroll = props.onScroll,\r\n      windowSize = props.windowSize,\r\n      getItemCount = props.getItemCount,\r\n      data = props.data,\r\n      initialScrollIndex = props.initialScrollIndex;\r\n    invariant(\r\n    // $FlowFixMe[prop-missing]\r\n    !onScroll || !onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\r\n    invariant(windowSizeOrDefault(windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\r\n    invariant(getItemCount, 'VirtualizedList: The \"getItemCount\" prop must be provided');\r\n    var itemCount = getItemCount(data);\r\n    if (initialScrollIndex != null && !this._hasTriggeredInitialScrollToIndex && (initialScrollIndex < 0 || itemCount > 0 && initialScrollIndex >= itemCount) && !this._hasWarned.initialScrollIndex) {\r\n      console.warn(\"initialScrollIndex \\\"\" + initialScrollIndex + \"\\\" is not valid (list has \" + itemCount + \" items)\");\r\n      this._hasWarned.initialScrollIndex = true;\r\n    }\r\n    if (__DEV__ && !this._hasWarned.flexWrap) {\r\n      // $FlowFixMe[underconstrained-implicit-instantiation]\r\n      var flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\r\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\r\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\r\n        this._hasWarned.flexWrap = true;\r\n      }\r\n    }\r\n  }\r\n  static _createRenderMask(props, cellsAroundViewport, additionalRegions) {\r\n    var itemCount = props.getItemCount(props.data);\r\n    invariant(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, \"Invalid cells around viewport \\\"[\" + cellsAroundViewport.first + \", \" + cellsAroundViewport.last + \"]\\\" was passed to VirtualizedList._createRenderMask\");\r\n    var renderMask = new CellRenderMask(itemCount);\r\n    if (itemCount > 0) {\r\n      var allRegions = [cellsAroundViewport, ...(additionalRegions !== null && additionalRegions !== void 0 ? additionalRegions : [])];\r\n      for (var _i2 = 0, _allRegions = allRegions; _i2 < _allRegions.length; _i2++) {\r\n        var region = _allRegions[_i2];\r\n        renderMask.addCells(region);\r\n      }\r\n\r\n      // The initially rendered cells are retained as part of the\r\n      // \"scroll-to-top\" optimization\r\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\r\n        var initialRegion = VirtualizedList._initialRenderRegion(props);\r\n        renderMask.addCells(initialRegion);\r\n      }\r\n\r\n      // The layout coordinates of sticker headers may be off-screen while the\r\n      // actual header is on-screen. Keep the most recent before the viewport\r\n      // rendered, even if its layout coordinates are not in viewport.\r\n      var stickyIndicesSet = new Set(props.stickyHeaderIndices);\r\n      VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);\r\n    }\r\n    return renderMask;\r\n  }\r\n  static _initialRenderRegion(props) {\r\n    var _props$initialScrollI;\r\n    var itemCount = props.getItemCount(props.data);\r\n    var firstCellIndex = Math.max(0, Math.min(itemCount - 1, Math.floor((_props$initialScrollI = props.initialScrollIndex) !== null && _props$initialScrollI !== void 0 ? _props$initialScrollI : 0)));\r\n    var lastCellIndex = Math.min(itemCount, firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender)) - 1;\r\n    return {\r\n      first: firstCellIndex,\r\n      last: lastCellIndex\r\n    };\r\n  }\r\n  static _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {\r\n    var stickyOffset = props.ListHeaderComponent ? 1 : 0;\r\n    for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\r\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\r\n        renderMask.addCells({\r\n          first: itemIdx,\r\n          last: itemIdx\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  _adjustCellsAroundViewport(props, cellsAroundViewport) {\r\n    var data = props.data,\r\n      getItemCount = props.getItemCount;\r\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(props.onEndReachedThreshold);\r\n    var _this$_scrollMetrics = this._scrollMetrics,\r\n      contentLength = _this$_scrollMetrics.contentLength,\r\n      offset = _this$_scrollMetrics.offset,\r\n      visibleLength = _this$_scrollMetrics.visibleLength;\r\n    var distanceFromEnd = contentLength - visibleLength - offset;\r\n\r\n    // Wait until the scroll view metrics have been set up. And until then,\r\n    // we will trust the initialNumToRender suggestion\r\n    if (visibleLength <= 0 || contentLength <= 0) {\r\n      return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\r\n    }\r\n    var newCellsAroundViewport;\r\n    if (props.disableVirtualization) {\r\n      var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch) : 0;\r\n      newCellsAroundViewport = {\r\n        first: 0,\r\n        last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)\r\n      };\r\n    } else {\r\n      // If we have a non-zero initialScrollIndex and run this before we've scrolled,\r\n      // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\r\n      // So let's wait until we've scrolled the view to the right place. And until then,\r\n      // we will trust the initialScrollIndex suggestion.\r\n\r\n      // Thus, we want to recalculate the windowed render limits if any of the following hold:\r\n      // - initialScrollIndex is undefined or is 0\r\n      // - initialScrollIndex > 0 AND scrolling is complete\r\n      // - initialScrollIndex > 0 AND the end of the list is visible (this handles the case\r\n      //   where the list is shorter than the visible area)\r\n      if (props.initialScrollIndex && !this._scrollMetrics.offset && Math.abs(distanceFromEnd) >= Number.EPSILON) {\r\n        return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\r\n      }\r\n      newCellsAroundViewport = computeWindowedRenderLimits(props, maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch), windowSizeOrDefault(props.windowSize), cellsAroundViewport, this.__getFrameMetricsApprox, this._scrollMetrics);\r\n      invariant(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');\r\n    }\r\n    if (this._nestedChildLists.size() > 0) {\r\n      // If some cell in the new state has a child list in it, we should only render\r\n      // up through that item, so that we give that list a chance to render.\r\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\r\n      // their items.\r\n\r\n      // Will this prevent rendering if the nested list doesn't realize the end?\r\n      var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);\r\n      newCellsAroundViewport.last = childIdx !== null && childIdx !== void 0 ? childIdx : newCellsAroundViewport.last;\r\n    }\r\n    return newCellsAroundViewport;\r\n  }\r\n  _findFirstChildWithMore(first, last) {\r\n    for (var ii = first; ii <= last; ii++) {\r\n      var cellKeyForIndex = this._indicesToKeys.get(ii);\r\n      if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, childList => childList.hasMore())) {\r\n        return ii;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  componentDidMount() {\r\n    if (this._isNestedWithSameOrientation()) {\r\n      this.context.registerAsNestedChild({\r\n        ref: this,\r\n        cellKey: this.context.cellKey\r\n      });\r\n    }\r\n\r\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\r\n    this.setupWebWheelHandler();\r\n  }\r\n  componentWillUnmount() {\r\n    if (this._isNestedWithSameOrientation()) {\r\n      this.context.unregisterAsNestedChild({\r\n        ref: this\r\n      });\r\n    }\r\n    this._updateCellsToRenderBatcher.dispose({\r\n      abort: true\r\n    });\r\n    this._viewabilityTuples.forEach(tuple => {\r\n      tuple.viewabilityHelper.dispose();\r\n    });\r\n    this._fillRateHelper.deactivateAndFlush();\r\n\r\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\r\n    this.teardownWebWheelHandler();\r\n  }\r\n\r\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\r\n  setupWebWheelHandler() {\r\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\r\n      this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\r\n    } else {\r\n      setTimeout(() => this.setupWebWheelHandler(), 50);\r\n      return;\r\n    }\r\n  }\r\n\r\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\r\n  teardownWebWheelHandler() {\r\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\r\n      this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\r\n    }\r\n  }\r\n  static getDerivedStateFromProps(newProps, prevState) {\r\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\r\n    // sure we're rendering a reasonable range here.\r\n    var itemCount = newProps.getItemCount(newProps.data);\r\n    if (itemCount === prevState.renderMask.numCells()) {\r\n      return prevState;\r\n    }\r\n    var constrainedCells = VirtualizedList._constrainToItemCount(prevState.cellsAroundViewport, newProps);\r\n    return {\r\n      cellsAroundViewport: constrainedCells,\r\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells)\r\n    };\r\n  }\r\n  _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\r\n    var _this = this;\r\n    var _this$props4 = this.props,\r\n      CellRendererComponent = _this$props4.CellRendererComponent,\r\n      ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\r\n      ListHeaderComponent = _this$props4.ListHeaderComponent,\r\n      ListItemComponent = _this$props4.ListItemComponent,\r\n      data = _this$props4.data,\r\n      debug = _this$props4.debug,\r\n      getItem = _this$props4.getItem,\r\n      getItemCount = _this$props4.getItemCount,\r\n      getItemLayout = _this$props4.getItemLayout,\r\n      horizontal = _this$props4.horizontal,\r\n      renderItem = _this$props4.renderItem;\r\n    var stickyOffset = ListHeaderComponent ? 1 : 0;\r\n    var end = getItemCount(data) - 1;\r\n    var prevCellKey;\r\n    last = Math.min(end, last);\r\n    var _loop = function _loop() {\r\n      var item = getItem(data, ii);\r\n      var key = _this._keyExtractor(item, ii, _this.props);\r\n      _this._indicesToKeys.set(ii, key);\r\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\r\n        stickyHeaderIndices.push(cells.length);\r\n      }\r\n      var shouldListenForLayout = getItemLayout == null || debug || _this._fillRateHelper.enabled();\r\n      cells.push( /*#__PURE__*/React.createElement(CellRenderer, _extends({\r\n        CellRendererComponent: CellRendererComponent,\r\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\r\n        ListItemComponent: ListItemComponent,\r\n        cellKey: key,\r\n        horizontal: horizontal,\r\n        index: ii,\r\n        inversionStyle: inversionStyle,\r\n        item: item,\r\n        key: key,\r\n        prevCellKey: prevCellKey,\r\n        onUpdateSeparators: _this._onUpdateSeparators,\r\n        onCellFocusCapture: e => _this._onCellFocusCapture(key),\r\n        onUnmount: _this._onCellUnmount,\r\n        ref: _ref => {\r\n          _this._cellRefs[key] = _ref;\r\n        },\r\n        renderItem: renderItem\r\n      }, shouldListenForLayout && {\r\n        onCellLayout: _this._onCellLayout\r\n      })));\r\n      prevCellKey = key;\r\n    };\r\n    for (var ii = first; ii <= last; ii++) {\r\n      _loop();\r\n    }\r\n  }\r\n  static _constrainToItemCount(cells, props) {\r\n    var itemCount = props.getItemCount(props.data);\r\n    var last = Math.min(itemCount - 1, cells.last);\r\n    var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch);\r\n    return {\r\n      first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\r\n      last\r\n    };\r\n  }\r\n  _isNestedWithSameOrientation() {\r\n    var nestedContext = this.context;\r\n    return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\r\n  }\r\n  _keyExtractor(item, index, props\r\n  // $FlowFixMe[missing-local-annot]\r\n  ) {\r\n    if (props.keyExtractor != null) {\r\n      return props.keyExtractor(item, index);\r\n    }\r\n    var key = defaultKeyExtractor(item, index);\r\n    if (key === String(index)) {\r\n      _usedIndexForKey = true;\r\n      if (item.type && item.type.displayName) {\r\n        _keylessItemComponentName = item.type.displayName;\r\n      }\r\n    }\r\n    return key;\r\n  }\r\n  render() {\r\n    this._checkProps(this.props);\r\n    var _this$props5 = this.props,\r\n      ListEmptyComponent = _this$props5.ListEmptyComponent,\r\n      ListFooterComponent = _this$props5.ListFooterComponent,\r\n      ListHeaderComponent = _this$props5.ListHeaderComponent;\r\n    var _this$props6 = this.props,\r\n      data = _this$props6.data,\r\n      horizontal = _this$props6.horizontal;\r\n    var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\r\n    var cells = [];\r\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\r\n    var stickyHeaderIndices = [];\r\n\r\n    // 1. Add cell for ListHeaderComponent\r\n    if (ListHeaderComponent) {\r\n      if (stickyIndicesFromProps.has(0)) {\r\n        stickyHeaderIndices.push(0);\r\n      }\r\n      var _element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent :\r\n      /*#__PURE__*/\r\n      // $FlowFixMe[not-a-component]\r\n      // $FlowFixMe[incompatible-type-arg]\r\n      React.createElement(ListHeaderComponent, null);\r\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\r\n        cellKey: this._getCellKey() + '-header',\r\n        key: \"$header\"\r\n      }, /*#__PURE__*/React.createElement(View, {\r\n        onLayout: this._onLayoutHeader,\r\n        style: [inversionStyle, this.props.ListHeaderComponentStyle]\r\n      },\r\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\r\n      _element)));\r\n    }\r\n\r\n    // 2a. Add a cell for ListEmptyComponent if applicable\r\n    var itemCount = this.props.getItemCount(data);\r\n    if (itemCount === 0 && ListEmptyComponent) {\r\n      var _element2 = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent :\r\n      /*#__PURE__*/\r\n      // $FlowFixMe[not-a-component]\r\n      // $FlowFixMe[incompatible-type-arg]\r\n      React.createElement(ListEmptyComponent, null);\r\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\r\n        cellKey: this._getCellKey() + '-empty',\r\n        key: \"$empty\"\r\n      }, /*#__PURE__*/React.cloneElement(_element2, {\r\n        onLayout: event => {\r\n          this._onLayoutEmpty(event);\r\n          if (_element2.props.onLayout) {\r\n            _element2.props.onLayout(event);\r\n          }\r\n        },\r\n        style: [inversionStyle, _element2.props.style]\r\n      })));\r\n    }\r\n\r\n    // 2b. Add cells and spacers for each item\r\n    if (itemCount > 0) {\r\n      _usedIndexForKey = false;\r\n      _keylessItemComponentName = '';\r\n      var spacerKey = this._getSpacerKey(!horizontal);\r\n      var renderRegions = this.state.renderMask.enumerateRegions();\r\n      var lastSpacer = findLastWhere(renderRegions, r => r.isSpacer);\r\n      for (var _iterator = _createForOfIteratorHelperLoose(renderRegions), _step; !(_step = _iterator()).done;) {\r\n        var section = _step.value;\r\n        if (section.isSpacer) {\r\n          // Legacy behavior is to avoid spacers when virtualization is\r\n          // disabled (including head spacers on initial render).\r\n          if (this.props.disableVirtualization) {\r\n            continue;\r\n          }\r\n\r\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\r\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\r\n          // likely jump around as it renders in above the viewport.\r\n          var isLastSpacer = section === lastSpacer;\r\n          var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\r\n          var last = constrainToMeasured ? clamp(section.first - 1, section.last, this._highestMeasuredFrameIndex) : section.last;\r\n          var firstMetrics = this.__getFrameMetricsApprox(section.first, this.props);\r\n          var lastMetrics = this.__getFrameMetricsApprox(last, this.props);\r\n          var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\r\n          cells.push( /*#__PURE__*/React.createElement(View, {\r\n            key: \"$spacer-\" + section.first,\r\n            style: {\r\n              [spacerKey]: spacerSize\r\n            }\r\n          }));\r\n        } else {\r\n          this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);\r\n        }\r\n      }\r\n      if (!this._hasWarned.keys && _usedIndexForKey) {\r\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\r\n        this._hasWarned.keys = true;\r\n      }\r\n    }\r\n\r\n    // 3. Add cell for ListFooterComponent\r\n    if (ListFooterComponent) {\r\n      var _element3 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent :\r\n      /*#__PURE__*/\r\n      // $FlowFixMe[not-a-component]\r\n      // $FlowFixMe[incompatible-type-arg]\r\n      React.createElement(ListFooterComponent, null);\r\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\r\n        cellKey: this._getFooterCellKey(),\r\n        key: \"$footer\"\r\n      }, /*#__PURE__*/React.createElement(View, {\r\n        onLayout: this._onLayoutFooter,\r\n        style: [inversionStyle, this.props.ListFooterComponentStyle]\r\n      },\r\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\r\n      _element3)));\r\n    }\r\n\r\n    // 4. Render the ScrollView\r\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\r\n      onContentSizeChange: this._onContentSizeChange,\r\n      onLayout: this._onLayout,\r\n      onScroll: this._onScroll,\r\n      onScrollBeginDrag: this._onScrollBeginDrag,\r\n      onScrollEndDrag: this._onScrollEndDrag,\r\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\r\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\r\n      scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\r\n      // TODO: Android support\r\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\r\n      stickyHeaderIndices,\r\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\r\n    });\r\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\r\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\r\n      value: {\r\n        cellKey: null,\r\n        getScrollMetrics: this._getScrollMetrics,\r\n        horizontal: horizontalOrDefault(this.props.horizontal),\r\n        getOutermostParentListRef: this._getOutermostParentListRef,\r\n        registerAsNestedChild: this._registerAsNestedChild,\r\n        unregisterAsNestedChild: this._unregisterAsNestedChild\r\n      }\r\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\r\n      ref: this._captureScrollRef\r\n    }, cells));\r\n    var ret = innerRet;\r\n    /* https://github.com/necolas/react-native-web/issues/2239: Re-enable when ScrollView.Context.Consumer is available.\r\n    if (__DEV__) {\r\n      ret = (\r\n        <ScrollView.Context.Consumer>\r\n          {scrollContext => {\r\n            if (\r\n              scrollContext != null &&\r\n              !scrollContext.horizontal ===\r\n                !horizontalOrDefault(this.props.horizontal) &&\r\n              !this._hasWarned.nesting &&\r\n              this.context == null &&\r\n              this.props.scrollEnabled !== false\r\n            ) {\r\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\r\n              console.error(\r\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\r\n                  'orientation because it can break windowing and other functionality - use another ' +\r\n                  'VirtualizedList-backed container instead.',\r\n              );\r\n              this._hasWarned.nesting = true;\r\n            }\r\n            return innerRet;\r\n          }}\r\n        </ScrollView.Context.Consumer>\r\n      );\r\n    }*/\r\n    if (this.props.debug) {\r\n      return /*#__PURE__*/React.createElement(View, {\r\n        style: styles.debug\r\n      }, ret, this._renderDebugOverlay());\r\n    } else {\r\n      return ret;\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    var _this$props7 = this.props,\r\n      data = _this$props7.data,\r\n      extraData = _this$props7.extraData;\r\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\r\n      // clear the viewableIndices cache to also trigger\r\n      // the onViewableItemsChanged callback with the new data\r\n      this._viewabilityTuples.forEach(tuple => {\r\n        tuple.viewabilityHelper.resetViewableIndices();\r\n      });\r\n    }\r\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\r\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\r\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\r\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\r\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\r\n    // another hiPri update.\r\n    var hiPriInProgress = this._hiPriInProgress;\r\n    this._scheduleCellsToRenderUpdate();\r\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\r\n    // is triggered with `this._hiPriInProgress = true`\r\n    if (hiPriInProgress) {\r\n      this._hiPriInProgress = false;\r\n    }\r\n  }\r\n  _computeBlankness() {\r\n    this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);\r\n  }\r\n\r\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\r\n   * LTI update could not be added via codemod */\r\n\r\n  _onCellFocusCapture(cellKey) {\r\n    this._lastFocusedCellKey = cellKey;\r\n    this._updateCellsToRender();\r\n  }\r\n  _triggerRemeasureForChildListsInCell(cellKey) {\r\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\r\n      childList.measureLayoutRelativeToContainingList();\r\n    });\r\n  }\r\n  measureLayoutRelativeToContainingList() {\r\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\r\n    // node on an unmounted component\" during scrolling\r\n    try {\r\n      if (!this._scrollRef) {\r\n        return;\r\n      }\r\n      // We are assuming that getOutermostParentListRef().getScrollRef()\r\n      // is a non-null reference to a ScrollView\r\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), (x, y, width, height) => {\r\n        this._offsetFromParentVirtualizedList = this._selectOffset({\r\n          x,\r\n          y\r\n        });\r\n        this._scrollMetrics.contentLength = this._selectLength({\r\n          width,\r\n          height\r\n        });\r\n        var scrollMetrics = this._convertParentScrollMetrics(this.context.getScrollMetrics());\r\n        var metricsChanged = this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || this._scrollMetrics.offset !== scrollMetrics.offset;\r\n        if (metricsChanged) {\r\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\r\n          this._scrollMetrics.offset = scrollMetrics.offset;\r\n\r\n          // If metrics of the scrollView changed, then we triggered remeasure for child list\r\n          // to ensure VirtualizedList has the right information.\r\n          this._nestedChildLists.forEach(childList => {\r\n            childList.measureLayoutRelativeToContainingList();\r\n          });\r\n        }\r\n      }, error => {\r\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\r\n      });\r\n    } catch (error) {\r\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\r\n    }\r\n  }\r\n  _getFooterCellKey() {\r\n    return this._getCellKey() + '-footer';\r\n  }\r\n  // $FlowFixMe[missing-local-annot]\r\n  _renderDebugOverlay() {\r\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\r\n    var framesInLayout = [];\r\n    var itemCount = this.props.getItemCount(this.props.data);\r\n    for (var ii = 0; ii < itemCount; ii++) {\r\n      var frame = this.__getFrameMetricsApprox(ii, this.props);\r\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\r\n       * suppresses an error found when Flow v0.68 was deployed. To see the\r\n       * error delete this comment and run Flow. */\r\n      if (frame.inLayout) {\r\n        framesInLayout.push(frame);\r\n      }\r\n    }\r\n    var windowTop = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;\r\n    var frameLast = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.last, this.props);\r\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\r\n    var visTop = this._scrollMetrics.offset;\r\n    var visLen = this._scrollMetrics.visibleLength;\r\n    return /*#__PURE__*/React.createElement(View, {\r\n      style: [styles.debugOverlayBase, styles.debugOverlay]\r\n    }, framesInLayout.map((f, ii) => /*#__PURE__*/React.createElement(View, {\r\n      key: 'f' + ii,\r\n      style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\r\n        top: f.offset * normalize,\r\n        height: f.length * normalize\r\n      }]\r\n    })), /*#__PURE__*/React.createElement(View, {\r\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\r\n        top: windowTop * normalize,\r\n        height: windowLen * normalize\r\n      }]\r\n    }), /*#__PURE__*/React.createElement(View, {\r\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\r\n        top: visTop * normalize,\r\n        height: visLen * normalize\r\n      }]\r\n    }));\r\n  }\r\n  _selectLength(metrics) {\r\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\r\n  }\r\n  _selectOffset(metrics) {\r\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\r\n  }\r\n  _maybeCallOnEdgeReached() {\r\n    var _this$props8 = this.props,\r\n      data = _this$props8.data,\r\n      getItemCount = _this$props8.getItemCount,\r\n      onStartReached = _this$props8.onStartReached,\r\n      onStartReachedThreshold = _this$props8.onStartReachedThreshold,\r\n      onEndReached = _this$props8.onEndReached,\r\n      onEndReachedThreshold = _this$props8.onEndReachedThreshold,\r\n      initialScrollIndex = _this$props8.initialScrollIndex;\r\n    var _this$_scrollMetrics2 = this._scrollMetrics,\r\n      contentLength = _this$_scrollMetrics2.contentLength,\r\n      visibleLength = _this$_scrollMetrics2.visibleLength,\r\n      offset = _this$_scrollMetrics2.offset;\r\n    var distanceFromStart = offset;\r\n    var distanceFromEnd = contentLength - visibleLength - offset;\r\n\r\n    // Especially when oERT is zero it's necessary to 'floor' very small distance values to be 0\r\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\r\n    // be at the edge of the list with a distance approximating 0 but not quite there.\r\n    if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\r\n      distanceFromStart = 0;\r\n    }\r\n    if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\r\n      distanceFromEnd = 0;\r\n    }\r\n\r\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2px\r\n    // when oERT is not present (different from 2 viewports used elsewhere)\r\n    var DEFAULT_THRESHOLD_PX = 2;\r\n    var startThreshold = onStartReachedThreshold != null ? onStartReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\r\n    var endThreshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\r\n    var isWithinStartThreshold = distanceFromStart <= startThreshold;\r\n    var isWithinEndThreshold = distanceFromEnd <= endThreshold;\r\n\r\n    // First check if the user just scrolled within the end threshold\r\n    // and call onEndReached only once for a given content length,\r\n    // and only if onStartReached is not being executed\r\n    if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && isWithinEndThreshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\r\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\r\n      onEndReached({\r\n        distanceFromEnd\r\n      });\r\n    }\r\n\r\n    // Next check if the user just scrolled within the start threshold\r\n    // and call onStartReached only once for a given content length,\r\n    // and only if onEndReached is not being executed\r\n    else if (onStartReached != null && this.state.cellsAroundViewport.first === 0 && isWithinStartThreshold && this._scrollMetrics.contentLength !== this._sentStartForContentLength) {\r\n      // On initial mount when using initialScrollIndex the offset will be 0 initially\r\n      // and will trigger an unexpected onStartReached. To avoid this we can use\r\n      // timestamp to differentiate between the initial scroll metrics and when we actually\r\n      // received the first scroll event.\r\n      if (!initialScrollIndex || this._scrollMetrics.timestamp !== 0) {\r\n        this._sentStartForContentLength = this._scrollMetrics.contentLength;\r\n        onStartReached({\r\n          distanceFromStart\r\n        });\r\n      }\r\n    }\r\n\r\n    // If the user scrolls away from the start or end and back again,\r\n    // cause onStartReached or onEndReached to be triggered again\r\n    else {\r\n      this._sentStartForContentLength = isWithinStartThreshold ? this._sentStartForContentLength : 0;\r\n      this._sentEndForContentLength = isWithinEndThreshold ? this._sentEndForContentLength : 0;\r\n    }\r\n  }\r\n  _scheduleCellsToRenderUpdate() {\r\n    var _this$state$cellsArou = this.state.cellsAroundViewport,\r\n      first = _this$state$cellsArou.first,\r\n      last = _this$state$cellsArou.last;\r\n    var _this$_scrollMetrics3 = this._scrollMetrics,\r\n      offset = _this$_scrollMetrics3.offset,\r\n      visibleLength = _this$_scrollMetrics3.visibleLength,\r\n      velocity = _this$_scrollMetrics3.velocity;\r\n    var itemCount = this.props.getItemCount(this.props.data);\r\n    var hiPri = false;\r\n    var onStartReachedThreshold = onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold);\r\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\r\n    // Mark as high priority if we're close to the start of the first item\r\n    // But only if there are items before the first rendered item\r\n    if (first > 0) {\r\n      var distTop = offset - this.__getFrameMetricsApprox(first, this.props).offset;\r\n      hiPri = distTop < 0 || velocity < -2 && distTop < getScrollingThreshold(onStartReachedThreshold, visibleLength);\r\n    }\r\n    // Mark as high priority if we're close to the end of the last item\r\n    // But only if there are items after the last rendered item\r\n    if (!hiPri && last >= 0 && last < itemCount - 1) {\r\n      var distBottom = this.__getFrameMetricsApprox(last, this.props).offset - (offset + visibleLength);\r\n      hiPri = distBottom < 0 || velocity > 2 && distBottom < getScrollingThreshold(onEndReachedThreshold, visibleLength);\r\n    }\r\n    // Only trigger high-priority updates if we've actually rendered cells,\r\n    // and with that size estimate, accurately compute how many cells we should render.\r\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\r\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\r\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\r\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\r\n    // We shouldn't do another hipri cellToRenderUpdate\r\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\r\n      this._hiPriInProgress = true;\r\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\r\n      // as possible.\r\n      this._updateCellsToRenderBatcher.dispose({\r\n        abort: true\r\n      });\r\n      this._updateCellsToRender();\r\n      return;\r\n    } else {\r\n      this._updateCellsToRenderBatcher.schedule();\r\n    }\r\n  }\r\n  _updateViewableItems(props, cellsAroundViewport) {\r\n    this._viewabilityTuples.forEach(tuple => {\r\n      tuple.viewabilityHelper.onUpdate(props, this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);\r\n    });\r\n  }\r\n}\r\nVirtualizedList.contextType = VirtualizedListContext;\r\nvar styles = StyleSheet.create({\r\n  verticallyInverted: {\r\n    transform: 'scaleY(-1)'\r\n  },\r\n  horizontallyInverted: {\r\n    transform: 'scaleX(-1)'\r\n  },\r\n  debug: {\r\n    flex: 1\r\n  },\r\n  debugOverlayBase: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0\r\n  },\r\n  debugOverlay: {\r\n    bottom: 0,\r\n    width: 20,\r\n    borderColor: 'blue',\r\n    borderWidth: 1\r\n  },\r\n  debugOverlayFrame: {\r\n    left: 0,\r\n    backgroundColor: 'orange'\r\n  },\r\n  debugOverlayFrameLast: {\r\n    left: 0,\r\n    borderColor: 'green',\r\n    borderWidth: 2\r\n  },\r\n  debugOverlayFrameVis: {\r\n    left: 0,\r\n    borderColor: 'red',\r\n    borderWidth: 2\r\n  }\r\n});\r\nexport default VirtualizedList;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}