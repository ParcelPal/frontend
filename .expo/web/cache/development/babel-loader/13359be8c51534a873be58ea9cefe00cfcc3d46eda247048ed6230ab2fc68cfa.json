{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { WebView } from 'react-native-webview';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CreateOrder = function CreateOrder() {\n  var _useState = useState('https://www.example.com'),\n    _useState2 = _slicedToArray(_useState, 2),\n    url = _useState2[0],\n    setUrl = _useState2[1];\n  var webViewRef = React.useRef(null);\n  var handleNavigationStateChange = function handleNavigationStateChange(navState) {\n    setUrl(navState.url);\n    console.log('Current URL:', navState.url);\n    console.log('Navigation Type:', navState.navigationType);\n  };\n  var loadUrl = function loadUrl() {\n    webViewRef.current && webViewRef.current.reload();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.urlContainer,\n      children: [_jsx(TextInput, {\n        style: styles.urlInput,\n        value: url,\n        onChangeText: function onChangeText(text) {\n          return setUrl(text);\n        }\n      }), _jsx(Button, {\n        title: \"Go\",\n        onPress: loadUrl\n      })]\n    }), _jsx(WebView, {\n      ref: webViewRef,\n      source: {\n        uri: url\n      },\n      style: styles.webView,\n      onNavigationStateChange: handleNavigationStateChange\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    width: '100%'\n  },\n  urlContainer: {\n    flexDirection: 'row',\n    padding: 8\n  },\n  urlInput: {\n    flex: 1,\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginRight: 8,\n    paddingLeft: 8\n  },\n  webView: {\n    flex: 1\n  }\n});\nexport default CreateOrder;","map":{"version":3,"names":["React","useState","View","TextInput","Button","StyleSheet","WebView","jsx","_jsx","jsxs","_jsxs","CreateOrder","_useState","_useState2","_slicedToArray","url","setUrl","webViewRef","useRef","handleNavigationStateChange","navState","console","log","navigationType","loadUrl","current","reload","style","styles","container","children","urlContainer","urlInput","value","onChangeText","text","title","onPress","ref","source","uri","webView","onNavigationStateChange","create","flex","flexDirection","width","padding","height","borderColor","borderWidth","marginRight","paddingLeft"],"sources":["/home/ubuntu/Documents/airmeeds/frontend/screens/CreateOrder.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\r\nimport { WebView } from 'react-native-webview';\r\n\r\nconst CreateOrder = () => {\r\n  const [url, setUrl] = useState('https://www.example.com');\r\n  const webViewRef = React.useRef(null);\r\n  const handleNavigationStateChange = (navState) => {\r\n    // Log or perform actions based on the navigation state\r\nsetUrl(navState.url)\r\n    console.log('Current URL:', navState.url);\r\n    console.log('Navigation Type:', navState.navigationType);\r\n  };\r\n  const loadUrl = () => {\r\n    webViewRef.current && webViewRef.current.reload();\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.urlContainer}>\r\n        <TextInput\r\n          style={styles.urlInput}\r\n          value={url}\r\n          onChangeText={(text) => setUrl(text)}\r\n        />\r\n        <Button title=\"Go\" onPress={loadUrl} />\r\n      </View>\r\n      <WebView\r\n        ref={webViewRef}\r\n        source={{ uri: url }}\r\n        style={styles.webView}\r\n        onNavigationStateChange={handleNavigationStateChange}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n  },\r\n  urlContainer: {\r\n    flexDirection: 'row',\r\n    padding: 8,\r\n  },\r\n  urlInput: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginRight: 8,\r\n    paddingLeft: 8,\r\n  },\r\n  webView: {\r\n    flex: 1,\r\n    \r\n  },\r\n});\r\n\r\nexport default CreateOrder;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,OAAO,QAAQ,sBAAsB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/C,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAAC,SAAA,GAAsBX,QAAQ,CAAC,yBAAyB,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,GAAG,GAAAF,UAAA;IAAEG,MAAM,GAAAH,UAAA;EAClB,IAAMI,UAAU,GAAGjB,KAAK,CAACkB,MAAM,CAAC,IAAI,CAAC;EACrC,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA2BA,CAAIC,QAAQ,EAAK;IAEpDJ,MAAM,CAACI,QAAQ,CAACL,GAAG,CAAC;IAChBM,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,QAAQ,CAACL,GAAG,CAAC;IACzCM,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAACG,cAAc,CAAC;EAC1D,CAAC;EACD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpBP,UAAU,CAACQ,OAAO,IAAIR,UAAU,CAACQ,OAAO,CAACC,MAAM,CAAC,CAAC;EACnD,CAAC;EAED,OACEhB,KAAA,CAACR,IAAI;IAACyB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BpB,KAAA,CAACR,IAAI;MAACyB,KAAK,EAAEC,MAAM,CAACG,YAAa;MAAAD,QAAA,GAC/BtB,IAAA,CAACL,SAAS;QACRwB,KAAK,EAAEC,MAAM,CAACI,QAAS;QACvBC,KAAK,EAAElB,GAAI;QACXmB,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAKnB,MAAM,CAACmB,IAAI,CAAC;QAAA;MAAC,CACtC,CAAC,EACF3B,IAAA,CAACJ,MAAM;QAACgC,KAAK,EAAC,IAAI;QAACC,OAAO,EAAEb;MAAQ,CAAE,CAAC;IAAA,CACnC,CAAC,EACPhB,IAAA,CAACF,OAAO;MACNgC,GAAG,EAAErB,UAAW;MAChBsB,MAAM,EAAE;QAAEC,GAAG,EAAEzB;MAAI,CAAE;MACrBY,KAAK,EAAEC,MAAM,CAACa,OAAQ;MACtBC,uBAAuB,EAAEvB;IAA4B,CACtD,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,IAAMS,MAAM,GAAGvB,UAAU,CAACsC,MAAM,CAAC;EAC/Bd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,QAAQ;IACvBC,KAAK,EAAE;EACT,CAAC;EACDf,YAAY,EAAE;IACZc,aAAa,EAAE,KAAK;IACpBE,OAAO,EAAE;EACX,CAAC;EACDf,QAAQ,EAAE;IACRY,IAAI,EAAE,CAAC;IACPI,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE;EACf,CAAC;EACDX,OAAO,EAAE;IACPG,IAAI,EAAE;EAER;AACF,CAAC,CAAC;AAEF,eAAejC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}