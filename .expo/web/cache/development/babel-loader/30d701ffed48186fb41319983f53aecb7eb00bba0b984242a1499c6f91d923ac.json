{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _reactDom = require(\"react-dom\");\nvar findNodeHandle = function findNodeHandle(component) {\n  var node;\n  try {\n    node = (0, _reactDom.findDOMNode)(component);\n  } catch (e) {}\n  return node;\n};\nvar _default = findNodeHandle;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_reactDom","require","findNodeHandle","component","node","findDOMNode","e","_default","exports"],"sources":["C:/Users/Anirudh/New folder/amplify/frontend/node_modules/react-native-web/dist/exports/findNodeHandle/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\n\r\nimport { findDOMNode } from 'react-dom';\r\n\r\n/**\r\n * @deprecated imperatively finding the DOM element of a react component has been deprecated in React 18.\r\n * You should use ref properties on the component instead.\r\n */\r\nvar findNodeHandle = component => {\r\n  var node;\r\n  try {\r\n    node = findDOMNode(component);\r\n  } catch (e) {}\r\n  return node;\r\n};\r\nexport default findNodeHandle;"],"mappings":";;;;AAUA,IAAAA,SAAA,GAAAC,OAAA;AAMA,IAAIC,cAAc,GAAG,SAAjBA,cAAcA,CAAGC,SAAS,EAAI;EAChC,IAAIC,IAAI;EACR,IAAI;IACFA,IAAI,GAAG,IAAAJ,SAAA,CAAAK,WAAW,EAACF,SAAS,CAAC;EAC/B,CAAE,QAAOG,CAAC,EAAE,CAAC;EACb,OAAOF,IAAI;AACb,CAAC;AAAC,IAAAG,QAAA,GACaL,cAAc;AAAAM,OAAA,cAAAD,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}