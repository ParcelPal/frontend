{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _KeepAwake = require(\"./KeepAwake.types\");\nvar wakeLockMap = {};\nvar _default = {\n  isAvailableAsync: function isAvailableAsync() {\n    return (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee() {\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!_expoModulesCore.Platform.isDOMAvailable) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\", 'wakeLock' in navigator);\n          case 2:\n            return _context.abrupt(\"return\", false);\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  activate: function activate(tag) {\n    return (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2() {\n      var wakeLock;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (_expoModulesCore.Platform.isDOMAvailable) {\n              _context2.next = 2;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 2:\n            _context2.next = 4;\n            return navigator.wakeLock.request('screen');\n          case 4:\n            wakeLock = _context2.sent;\n            wakeLockMap[tag] = wakeLock;\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  },\n  deactivate: function deactivate(tag) {\n    return (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee3() {\n      var _wakeLockMap$tag$rele, _wakeLockMap$tag;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (_expoModulesCore.Platform.isDOMAvailable) {\n              _context3.next = 2;\n              break;\n            }\n            return _context3.abrupt(\"return\");\n          case 2:\n            if (!wakeLockMap[tag]) {\n              _context3.next = 7;\n              break;\n            }\n            (_wakeLockMap$tag$rele = (_wakeLockMap$tag = wakeLockMap[tag]).release) === null || _wakeLockMap$tag$rele === void 0 || _wakeLockMap$tag$rele.call(_wakeLockMap$tag);\n            delete wakeLockMap[tag];\n            _context3.next = 8;\n            break;\n          case 7:\n            throw new _expoModulesCore.CodedError('ERR_KEEP_AWAKE_TAG_INVALID', \"The wake lock with tag \".concat(tag, \" has not activated yet\"));\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }))();\n  },\n  addListenerForTag: function addListenerForTag(tag, listener) {\n    var eventListener = function eventListener() {\n      listener({\n        state: _KeepAwake.KeepAwakeEventState.RELEASE\n      });\n    };\n    var sentinel = wakeLockMap[tag];\n    if (sentinel) {\n      if ('addEventListener' in sentinel) {\n        var _sentinel$addEventLis;\n        (_sentinel$addEventLis = sentinel.addEventListener) === null || _sentinel$addEventLis === void 0 || _sentinel$addEventLis.call(sentinel, 'release', eventListener);\n      } else {\n        sentinel.onrelease = eventListener;\n      }\n    }\n    return {\n      remove: function remove() {\n        var sentinel = wakeLockMap[tag];\n        if (sentinel) {\n          if (sentinel.removeEventListener) {\n            sentinel.removeEventListener('release', eventListener);\n          } else {\n            sentinel.onrelease = null;\n          }\n        }\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;","map":{"version":3,"names":["_expoModulesCore","require","_KeepAwake","wakeLockMap","_default","isAvailableAsync","_asyncToGenerator2","_regenerator","mark","_callee","wrap","_callee$","_context","prev","next","Platform","isDOMAvailable","abrupt","navigator","stop","activate","tag","_callee2","wakeLock","_callee2$","_context2","request","sent","deactivate","_callee3","_wakeLockMap$tag$rele","_wakeLockMap$tag","_callee3$","_context3","release","call","CodedError","concat","addListenerForTag","listener","eventListener","state","KeepAwakeEventState","RELEASE","sentinel","_sentinel$addEventLis","addEventListener","onrelease","remove","removeEventListener","exports"],"sources":["C:\\Users\\Anirudh\\New folder\\amplify\\frontend\\node_modules\\expo-keep-awake\\src\\ExpoKeepAwake.web.ts"],"sourcesContent":["import { CodedError, Platform, Subscription } from 'expo-modules-core';\n\nimport { KeepAwakeEventState, KeepAwakeListener } from './KeepAwake.types';\n\nconst wakeLockMap: Record<string, WakeLockSentinel> = {};\n\ntype WakeLockSentinel = {\n  onrelease: null | ((event: any) => void);\n  released: boolean;\n  type: 'screen';\n  release?: Function;\n\n  addEventListener?: (event: string, listener: (event: any) => void) => void;\n  removeEventListener?: (event: string, listener: (event: any) => void) => void;\n};\n\ndeclare const navigator: {\n  wakeLock: {\n    request(type: 'screen'): Promise<WakeLockSentinel>;\n  };\n};\n\n/** Wraps the webWakeLock API https://developer.mozilla.org/en-US/docs/Web/API/Screen_Wake_Lock_API */\nexport default {\n  async isAvailableAsync() {\n    if (Platform.isDOMAvailable) {\n      return 'wakeLock' in navigator;\n    }\n    return false;\n  },\n  async activate(tag: string) {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n    const wakeLock = await navigator.wakeLock.request('screen');\n    wakeLockMap[tag] = wakeLock;\n  },\n  async deactivate(tag: string) {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n    if (wakeLockMap[tag]) {\n      wakeLockMap[tag].release?.();\n      delete wakeLockMap[tag];\n    } else {\n      throw new CodedError(\n        'ERR_KEEP_AWAKE_TAG_INVALID',\n        `The wake lock with tag ${tag} has not activated yet`\n      );\n    }\n  },\n  addListenerForTag(tag: string, listener: KeepAwakeListener): Subscription {\n    const eventListener = () => {\n      listener({ state: KeepAwakeEventState.RELEASE });\n    };\n    const sentinel = wakeLockMap[tag];\n    if (sentinel) {\n      if ('addEventListener' in sentinel) {\n        sentinel.addEventListener?.('release', eventListener);\n      } else {\n        sentinel.onrelease = eventListener;\n      }\n    }\n    return {\n      remove: () => {\n        const sentinel = wakeLockMap[tag];\n        if (sentinel) {\n          if (sentinel.removeEventListener) {\n            sentinel.removeEventListener('release', eventListener);\n          } else {\n            sentinel.onrelease = null;\n          }\n        }\n      },\n    };\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}