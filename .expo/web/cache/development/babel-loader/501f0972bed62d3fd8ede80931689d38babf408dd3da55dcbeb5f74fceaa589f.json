{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useRefEffect;\nvar _react = require(\"react\");\nfunction useRefEffect(effect) {\n  var cleanupRef = (0, _react.useRef)(undefined);\n  return (0, _react.useCallback)(function (instance) {\n    if (cleanupRef.current) {\n      cleanupRef.current();\n      cleanupRef.current = undefined;\n    }\n    if (instance != null) {\n      cleanupRef.current = effect(instance);\n    }\n  }, [effect]);\n}","map":{"version":3,"names":["_react","require","useRefEffect","effect","cleanupRef","useRef","undefined","useCallback","instance","current"],"sources":["C:/Users/Anirudh/New folder/amplify/frontend/node_modules/react-native-web/dist/vendor/react-native/Utilities/useRefEffect.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\r\n\r\nimport { useCallback, useRef } from 'react';\r\n/**\r\n * Constructs a callback ref that provides similar semantics as `useEffect`. The\r\n * supplied `effect` callback will be called with non-null component instances.\r\n * The `effect` callback can also optionally return a cleanup function.\r\n *\r\n * When a component is updated or unmounted, the cleanup function is called. The\r\n * `effect` callback will then be called again, if applicable.\r\n *\r\n * When a new `effect` callback is supplied, the previously returned cleanup\r\n * function will be called before the new `effect` callback is called with the\r\n * same instance.\r\n *\r\n * WARNING: The `effect` callback should be stable (e.g. using `useCallback`).\r\n */\r\nexport default function useRefEffect(effect) {\r\n  var cleanupRef = useRef(undefined);\r\n  return useCallback(instance => {\r\n    if (cleanupRef.current) {\r\n      cleanupRef.current();\r\n      cleanupRef.current = undefined;\r\n    }\r\n    if (instance != null) {\r\n      cleanupRef.current = effect(instance);\r\n    }\r\n  }, [effect]);\r\n}"],"mappings":";;;;AAUA,IAAAA,MAAA,GAAAC,OAAA;AAee,SAASC,YAAYA,CAACC,MAAM,EAAE;EAC3C,IAAIC,UAAU,GAAG,IAAAC,aAAM,EAACC,SAAS,CAAC;EAClC,OAAO,IAAAC,kBAAW,EAAC,UAAAC,QAAQ,EAAI;IAC7B,IAAIJ,UAAU,CAACK,OAAO,EAAE;MACtBL,UAAU,CAACK,OAAO,CAAC,CAAC;MACpBL,UAAU,CAACK,OAAO,GAAGH,SAAS;IAChC;IACA,IAAIE,QAAQ,IAAI,IAAI,EAAE;MACpBJ,UAAU,CAACK,OAAO,GAAGN,MAAM,CAACK,QAAQ,CAAC;IACvC;EACF,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;AACd"},"metadata":{},"sourceType":"script","externalDependencies":[]}